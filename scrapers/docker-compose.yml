version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: afl_fantasy_db
    environment:
      POSTGRES_DB: afl_fantasy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - afl_fantasy_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: afl_fantasy_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - afl_fantasy_network

  # Advanced Python Scraper
  scraper:
    build:
      context: .
      dockerfile: Dockerfile.scraper
    container_name: afl_fantasy_scraper
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/afl_fantasy
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./scraped_data:/app/data
    networks:
      - afl_fantasy_network
    restart: unless-stopped

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: afl_fantasy_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - afl_fantasy_network

  # Grafana for Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: afl_fantasy_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - afl_fantasy_network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  afl_fantasy_network:
    driver: bridge
