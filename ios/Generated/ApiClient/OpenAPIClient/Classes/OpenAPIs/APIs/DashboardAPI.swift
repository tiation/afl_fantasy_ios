//
// DashboardAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

// MARK: - DashboardAPI

open class DashboardAPI {
    /**
     Get dashboard data

     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getDashboard(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: DashboardResponse?, _ error: Error?) -> Void)) -> RequestTask {
        getDashboardWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get dashboard data
     - GET /v1/dashboard
     - Returns comprehensive dashboard information including team value,  current rank, upcoming matchups, and top performing players.
     - API Key:
       - type: apiKey X-API-Key (HEADER)
       - name: ApiKeyAuth
     - returns: RequestBuilder<DashboardResponse>
     */
    open class func getDashboardWithRequestBuilder() -> RequestBuilder<DashboardResponse> {
        let localVariablePath = "/v1/dashboard"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [:]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DashboardResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
