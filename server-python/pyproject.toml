[project]
name = "afl-fantasy-server"
version = "1.0.0"
description = "AFL Fantasy Platform - Python Server"
requires-python = ">=3.11"
dependencies = [
    "beautifulsoup4>=4.13.4",
    "flask-cors>=5.0.1",
    "flask>=3.1.0",
    "openpyxl>=3.1.5",
    "pandas>=2.2.3",
    "requests>=2.32.3",
    "numpy>=2.2.5",
    "lxml>=5.4.0",
    "html5lib>=1.1",
    "apscheduler>=3.11.0",
    "selenium>=4.33.0",
    "webdriver-manager>=4.0.2",
    "google-generativeai>=0.8.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "websockets>=11.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "bandit>=1.7.5",
]

[tool.ruff]
# Python standards aligned with your rules
line-length = 120
target-version = "py311"
fix = true

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # flake8-bandit (security)
    "SIM", # flake8-simplify
]
ignore = ["E501"]  # line too long (handled by formatter)

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 120
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]

[tool.coverage.run]
source = ["."]
omit = ["*/tests/*", "*/test_*.py", "*/__pycache__/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
