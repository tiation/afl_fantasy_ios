//
// Fixture.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

// MARK: - Fixture

public struct Fixture: Codable, JSONEncodable, Hashable {
    public static let difficultyRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: 5, exclusiveMaximum: false, multipleOf: nil)
    /** Opposition team */
    public var opponent: String
    /** Match venue */
    public var venue: String
    /** Difficulty rating (1=easy, 5=hard) */
    public var difficulty: Int

    public init(opponent: String, venue: String, difficulty: Int) {
        self.opponent = opponent
        self.venue = venue
        self.difficulty = difficulty
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case opponent
        case venue
        case difficulty
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(opponent, forKey: .opponent)
        try container.encode(venue, forKey: .venue)
        try container.encode(difficulty, forKey: .difficulty)
    }
}
