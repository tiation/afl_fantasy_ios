openapi: 3.0.1
info:
  title: AFL Sports Data API
  description: Champion Data provided API for AFL metadata and metrics.
  contact:
    name: Service Desk
    url: http://servicedesk.championdata.com/
  version: v1.53.0
servers:
  - url: https://api.afl.championdata.io
paths:
  /v1/leagues:
    get:
      tags:
        - Leagues
      summary: Get a list of available Leagues
      operationId: Leagues_GetLeagues
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/League'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/League'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}:
    get:
      tags:
        - Leagues
      summary: Get details for a given League
      operationId: Leagues_GetLeagueById
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League (obtained from /leagues).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
            text/json:
              schema:
                $ref: '#/components/schemas/League'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: League Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}/levels:
    get:
      tags:
        - Leagues
      summary: Get a list of available levels for a given League
      operationId: Leagues_GetLeagueLevelsByLeagueId
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League (obtained from /leagues).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueLevel'
            text/json:
              schema:
                $ref: '#/components/schemas/LeagueLevel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: League Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}/levels/{levelId}:
    get:
      tags:
        - Leagues
      summary: Get details for a level within a given league
      operationId: Leagues_GetLeagueLevel
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League (obtained from /leagues).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: levelId
          in: path
          description: >-
            Unique identifier of a Level (obtained from
            /leagues/{leagueId}/levels).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueLevelDetail'
            text/json:
              schema:
                $ref: '#/components/schemas/LeagueLevelDetail'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Level Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}:
    get:
      tags:
        - Matches
      summary: Get details about a given match
      operationId: Matches_GetMatchInfo
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchInfo'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/persons:
    get:
      tags:
        - Matches
      summary: >-
        Get a list of persons relevant to a given match with details on each
        person.
      operationId: Matches_GetPerson
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchPersons'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchPersons'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Match has not started. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/venue:
    get:
      tags:
        - Matches
      summary: Get details about the venue for a single match
      operationId: Matches_GetVenue
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchVenueDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchVenueDetails'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/metrics:
    get:
      tags:
        - Matches
      summary: Get a list of valid metrics and their metadata for a given match
      operationId: Matches_GetMetrics
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
        - name: showAllMetrics
          in: query
          description: >-
            Toggleable flag which will allows you to see all metrics within the
            platform or just metrics that are valid within your metric tier.
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchMetrics'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchMetrics'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Teams have not been entered. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/transactions:
    get:
      tags:
        - Matches
      summary: Get a list of match transactions for the specified match
      operationId: Matches_GetTransactions
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchTransactions'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchTransactions'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Match has not started. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/chains:
    get:
      tags:
        - Matches
      summary: >-
        Get a list of possession chains for a given match with details on each
        chain
      operationId: Matches_GetChains
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchChains'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchChains'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Match has not started. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/rotations:
    get:
      tags:
        - Matches
      summary: >-
        Returns a MatchRotations object containing all Rotation transactions and
        current stint details for each Player.
      operationId: Matches_GetRotations
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchRotations'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchRotations'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Match has not started. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/score:
    get:
      tags:
        - Matches
      summary: Get match and period scores and results for a given match
      operationId: Matches_GetScore
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchScore'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchScore'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Match has not started. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/shots:
    get:
      tags:
        - Matches
      summary: Get a list of shots at goal for a given match
      operationId: Matches_GetShots
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchShots'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchShots'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Match has not started. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/entries:
    get:
      tags:
        - Matches
      summary: Get a list of inside 50 entries for a given match
      operationId: Matches_GetEntries
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchEntries'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchEntries'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Match has not started. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/statistics/leaders:
    get:
      tags:
        - Matches
      summary: Get player leaders in a given match for selected metrics
      operationId: Matches_GetStatisticLeaders
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchStatisticLeaders'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchStatisticLeaders'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Teams have not been entered. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/statistics/players:
    get:
      tags:
        - Matches
      summary: >-
        Get player statistics for all players and all valid metrics in a given
        match
      operationId: Matches_GetStatisticPlayers
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
        - name: period
          in: query
          description: >-
            List of integers identifying periods used to filter the metrics
            returned
          schema:
            type: array
            items:
              type: integer
              format: int32
          example:
            - 1
            - 2
        - name: zone
          in: query
          description: >-
            List of string identifying zones used to filter the metrics
            returned. Supported values are D50, DM, MID, CB, AM and F50.
          schema:
            type: array
            items:
              type: string
          example:
            - F50
            - MID
        - name: metric
          in: query
          description: >-
            Array of specific metric codes to get returned. This will result in
            the endpoint only returning these specific metrics. Note this
            endpoint is case sensitive and only works with a metrics code
          schema:
            type: array
            items:
              type: string
          example:
            - TACKLE
            - KICK
            - HANDBALL
        - name: team
          in: query
          description: Team to return stats for, 'away' or 'home', case sensitive
          schema:
            type: string
          example: home
        - name: fromPeriodSeconds
          in: query
          description: >-
            Limits statistics to counting events that occurred on or after this
            number of seconds
          schema:
            type: integer
            format: int32
          example: 200
        - name: toPeriodSeconds
          in: query
          description: >-
            Limits statistics to counting events that occurred on or before this
            number of seconds
          schema:
            type: integer
            format: int32
          example: 400
        - name: lastXSeconds
          in: query
          description: >-
            Limits statistics to counting events that occurred in the last X
            number of seconds
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchStatisticPlayers'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchStatisticPlayers'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Teams have not been entered. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '414':
          description: Request URI is too long
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
    post:
      tags:
        - Matches
      summary: Get players statistics based on the request payload passed through
      operationId: Matches_PostStatisticPlayers
      parameters:
        - name: matchId
          in: path
          description: ''
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPlayerMetricRequests'
            examples:
              All kicks for all periods and zones:
                summary: >-
                  Returns all kicks for all periods and zones that happened
                  within a game. This is assuming the match did not go into
                  overtime
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - D50
              All kicks in a match split by period:
                summary: >-
                  Returns all kicks that happened within a game, split up by
                  period. This is assuming the match did not go into overtime
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
              All kicks in a game for the away team in various zones:
                summary: >-
                  Returns all kicks that happened within a game for the away
                  team in various zones
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - D50
              Various requests all with different filters:
                summary: >-
                  Returns different combinations of metrics and filters within a
                  single request
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                        - HANDBALL
                      team: home
                      periods:
                        - 1
                        - 4
                      zones:
                        - F50
                    - metricCodes:
                        - TACKLE
                      periods:
                        - 2
                        - 3
                    - metricCodes:
                        - GOAL
                      periods:
                        - 4
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      team: away
                      periods:
                        - 1
                        - 2
                        - 3
                        - 4
                      zones:
                        - AM
                        - F50
                        - D50
              All Handballs in a match as well all Handballs that occurred in the last 5 minutes of a period:
                summary: >-
                  Returns all Handballs that happened within a game as well as
                  all Handballs that occurred in the last 5 minutes of a period.
                  When used live, it only returns handballs in the last 5
                  minutes of the current period, not across the entire match
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                    - metricCodes:
                        - HANDBALL
                      lastXSeconds: 300
              All Handballs in a match that occurred during the 5 to 10 minute mark of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred during the 5 to 10 minute
                  mark of the match split by zone. Note that this will return
                  values across all periods
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
              All Handballs in a match that happened during the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred within the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      toPeriodSeconds: 300
              All Handballs in a match that happened after the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred after the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
              Get all tackles in a game per period with a custom ID:
                summary: >-
                  Returns all tackles in a game per period using a custom ID.
                  This is assuming the match did not go into overtime
                value:
                  playerMetricRequests:
                    - id: TACKLE#1
                      metricCodes:
                        - TACKLE
                      periods:
                        - 1
                    - id: TACKLE#2
                      metricCodes:
                        - TACKLE
                      periods:
                        - 2
                    - id: TACKLE#3
                      metricCodes:
                        - TACKLE
                      periods:
                        - 3
                    - id: TACKLE#4
                      metricCodes:
                        - TACKLE
                      periods:
                        - 4
          text/json:
            schema:
              $ref: '#/components/schemas/PostPlayerMetricRequests'
            examples:
              All kicks for all periods and zones:
                summary: >-
                  Returns all kicks for all periods and zones that happened
                  within a game. This is assuming the match did not go into
                  overtime
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - D50
              All kicks in a match split by period:
                summary: >-
                  Returns all kicks that happened within a game, split up by
                  period. This is assuming the match did not go into overtime
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
              All kicks in a game for the away team in various zones:
                summary: >-
                  Returns all kicks that happened within a game for the away
                  team in various zones
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - D50
              Various requests all with different filters:
                summary: >-
                  Returns different combinations of metrics and filters within a
                  single request
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                        - HANDBALL
                      team: home
                      periods:
                        - 1
                        - 4
                      zones:
                        - F50
                    - metricCodes:
                        - TACKLE
                      periods:
                        - 2
                        - 3
                    - metricCodes:
                        - GOAL
                      periods:
                        - 4
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      team: away
                      periods:
                        - 1
                        - 2
                        - 3
                        - 4
                      zones:
                        - AM
                        - F50
                        - D50
              All Handballs in a match as well all Handballs that occurred in the last 5 minutes of a period:
                summary: >-
                  Returns all Handballs that happened within a game as well as
                  all Handballs that occurred in the last 5 minutes of a period.
                  When used live, it only returns handballs in the last 5
                  minutes of the current period, not across the entire match
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                    - metricCodes:
                        - HANDBALL
                      lastXSeconds: 300
              All Handballs in a match that occurred during the 5 to 10 minute mark of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred during the 5 to 10 minute
                  mark of the match split by zone. Note that this will return
                  values across all periods
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
              All Handballs in a match that happened during the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred within the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      toPeriodSeconds: 300
              All Handballs in a match that happened after the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred after the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
              Get all tackles in a game per period with a custom ID:
                summary: >-
                  Returns all tackles in a game per period using a custom ID.
                  This is assuming the match did not go into overtime
                value:
                  playerMetricRequests:
                    - id: TACKLE#1
                      metricCodes:
                        - TACKLE
                      periods:
                        - 1
                    - id: TACKLE#2
                      metricCodes:
                        - TACKLE
                      periods:
                        - 2
                    - id: TACKLE#3
                      metricCodes:
                        - TACKLE
                      periods:
                        - 3
                    - id: TACKLE#4
                      metricCodes:
                        - TACKLE
                      periods:
                        - 4
          application/*+json:
            schema:
              $ref: '#/components/schemas/PostPlayerMetricRequests'
            examples:
              All kicks for all periods and zones:
                summary: >-
                  Returns all kicks for all periods and zones that happened
                  within a game. This is assuming the match did not go into
                  overtime
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - D50
              All kicks in a match split by period:
                summary: >-
                  Returns all kicks that happened within a game, split up by
                  period. This is assuming the match did not go into overtime
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
              All kicks in a game for the away team in various zones:
                summary: >-
                  Returns all kicks that happened within a game for the away
                  team in various zones
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      team: away
                      zones:
                        - D50
              Various requests all with different filters:
                summary: >-
                  Returns different combinations of metrics and filters within a
                  single request
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - KICK
                        - HANDBALL
                      team: home
                      periods:
                        - 1
                        - 4
                      zones:
                        - F50
                    - metricCodes:
                        - TACKLE
                      periods:
                        - 2
                        - 3
                    - metricCodes:
                        - GOAL
                      periods:
                        - 4
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      team: away
                      periods:
                        - 1
                        - 2
                        - 3
                        - 4
                      zones:
                        - AM
                        - F50
                        - D50
              All Handballs in a match as well all Handballs that occurred in the last 5 minutes of a period:
                summary: >-
                  Returns all Handballs that happened within a game as well as
                  all Handballs that occurred in the last 5 minutes of a period.
                  When used live, it only returns handballs in the last 5
                  minutes of the current period, not across the entire match
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                    - metricCodes:
                        - HANDBALL
                      lastXSeconds: 300
              All Handballs in a match that occurred during the 5 to 10 minute mark of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred during the 5 to 10 minute
                  mark of the match split by zone. Note that this will return
                  values across all periods
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
              All Handballs in a match that happened during the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred within the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      toPeriodSeconds: 300
              All Handballs in a match that happened after the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred after the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  playerMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
              Get all tackles in a game per period with a custom ID:
                summary: >-
                  Returns all tackles in a game per period using a custom ID.
                  This is assuming the match did not go into overtime
                value:
                  playerMetricRequests:
                    - id: TACKLE#1
                      metricCodes:
                        - TACKLE
                      periods:
                        - 1
                    - id: TACKLE#2
                      metricCodes:
                        - TACKLE
                      periods:
                        - 2
                    - id: TACKLE#3
                      metricCodes:
                        - TACKLE
                      periods:
                        - 3
                    - id: TACKLE#4
                      metricCodes:
                        - TACKLE
                      periods:
                        - 4
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPlayerMetricResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PostPlayerMetricResponse'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Teams have not been entered. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '413':
          description: Request Too Long
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/statistics/squads:
    get:
      tags:
        - Matches
      summary: >-
        Get squad statistics for both squads and all valid metrics in a given
        match
      operationId: Matches_GetStatisticSquads
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
        - name: period
          in: query
          description: >-
            List of integers identifying periods used to filter the metrics
            returned
          schema:
            type: array
            items:
              type: integer
              format: int32
          example:
            - 1
            - 2
        - name: zone
          in: query
          description: >-
            List of string identifying zones used to filter the metrics
            returned. Supported values are D50, DM, MID, CB, AM and F50.
          schema:
            type: array
            items:
              type: string
          example:
            - F50
            - MID
        - name: context
          in: query
          description: >-
            The context of the metrics returned. Supported values are For,
            Against, Diff, PhysicalDiff.
          schema:
            type: string
          example: For
        - name: metric
          in: query
          description: >-
            Array of specific metric codes to get returned. This will result in
            the endpoint only returning these specific metrics. Note this
            endpoint is case sensitive and only works with a metrics code
          schema:
            type: array
            items:
              type: string
          example:
            - TACKLE
            - KICK
            - HANDBALL
        - name: team
          in: query
          description: Team to return stats for, 'away' or 'home', case sensitive
          schema:
            type: string
          example: home
        - name: fromPeriodSeconds
          in: query
          description: >-
            Limits statistics to counting events that occurred on or after this
            number of seconds
          schema:
            type: integer
            format: int32
          example: 200
        - name: toPeriodSeconds
          in: query
          description: >-
            Limits statistics to counting events that occurred on or before this
            number of seconds
          schema:
            type: integer
            format: int32
          example: 400
        - name: lastXSeconds
          in: query
          description: >-
            Limits statistics to counting events that occurred in the last X
            number of seconds
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchStatisticSquads'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchStatisticSquads'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Teams have not been entered. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '414':
          description: Request URI is too long
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
    post:
      tags:
        - Matches
      summary: Get squad statistics based on the request payload passed through
      operationId: Matches_PostStatisticSquads
      parameters:
        - name: matchId
          in: path
          description: ''
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSquadMetricRequests'
            examples:
              All metrics for all periods and zones:
                summary: >-
                  Returns all kicks for all periods and zones that happened
                  within a game. This is assuming the match did not go into
                  overtime
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - D50
              All kicks in a game split by context:
                summary: >-
                  Returns all kicks that happened within a match, split up by
                  different contexts. This is assuming the match did not go into
                  overtime
                value:
                  squadMetricRequests:
                    - context: For
                      metricCodes:
                        - KICK
                    - context: Against
                      metricCodes:
                        - KICK
                    - context: Diff
                      metricCodes:
                        - KICK
                    - context: PhysicalDiff
                      metricCodes:
                        - KICK
              All kicks in a game, per period for the home team:
                summary: >-
                  Returns all kicks that happened within a game for the home
                  team, split up by period. This is assuming the match did not
                  go into overtime
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 1
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 2
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 3
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 4
              All Handballs in a match as well all Handballs that occurred in the last 5 minutes of a period:
                summary: >-
                  Returns all Handballs that happened within a game as well as
                  all Handballs that occurred in the last 5 minutes of a period.
                  When used live, it only returns handballs in the last 5
                  minutes of the current period, not across the entire match
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                    - metricCodes:
                        - HANDBALL
                      lastXSeconds: 300
              All Handballs in a match that occurred during the 5 to 10 minute mark of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred during the 5 to 10 minute
                  mark of the match split by zone. Note that this will return
                  values across all periods
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
              All Handballs in a match that happened during the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred within the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      toPeriodSeconds: 300
              All Handballs in a match that happened after the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred after the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
              Sample complex requests:
                summary: >-
                  Returns different combinations of metrics and filters within a
                  single request
                value:
                  squadMetricRequests:
                    - context: Diff
                      metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 1
                      zones:
                        - D50
                        - DM
                      lastXSeconds: 300
                    - context: Against
                      metricCodes:
                        - KICK
                        - HANDBALL
                        - TACKLE
                        - GOAL
                        - BEHIND
                      team: away
                      periods:
                        - 1
                        - 3
                        - 4
                      zones:
                        - DM
                      toPeriodSeconds: 100
                    - team: home
                      periods:
                        - 3
                      fromPeriodSeconds: 100
                      toPeriodSeconds: 300
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 4
                      fromPeriodSeconds: 100
          text/json:
            schema:
              $ref: '#/components/schemas/PostSquadMetricRequests'
            examples:
              All metrics for all periods and zones:
                summary: >-
                  Returns all kicks for all periods and zones that happened
                  within a game. This is assuming the match did not go into
                  overtime
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - D50
              All kicks in a game split by context:
                summary: >-
                  Returns all kicks that happened within a match, split up by
                  different contexts. This is assuming the match did not go into
                  overtime
                value:
                  squadMetricRequests:
                    - context: For
                      metricCodes:
                        - KICK
                    - context: Against
                      metricCodes:
                        - KICK
                    - context: Diff
                      metricCodes:
                        - KICK
                    - context: PhysicalDiff
                      metricCodes:
                        - KICK
              All kicks in a game, per period for the home team:
                summary: >-
                  Returns all kicks that happened within a game for the home
                  team, split up by period. This is assuming the match did not
                  go into overtime
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 1
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 2
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 3
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 4
              All Handballs in a match as well all Handballs that occurred in the last 5 minutes of a period:
                summary: >-
                  Returns all Handballs that happened within a game as well as
                  all Handballs that occurred in the last 5 minutes of a period.
                  When used live, it only returns handballs in the last 5
                  minutes of the current period, not across the entire match
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                    - metricCodes:
                        - HANDBALL
                      lastXSeconds: 300
              All Handballs in a match that occurred during the 5 to 10 minute mark of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred during the 5 to 10 minute
                  mark of the match split by zone. Note that this will return
                  values across all periods
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
              All Handballs in a match that happened during the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred within the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      toPeriodSeconds: 300
              All Handballs in a match that happened after the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred after the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
              Sample complex requests:
                summary: >-
                  Returns different combinations of metrics and filters within a
                  single request
                value:
                  squadMetricRequests:
                    - context: Diff
                      metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 1
                      zones:
                        - D50
                        - DM
                      lastXSeconds: 300
                    - context: Against
                      metricCodes:
                        - KICK
                        - HANDBALL
                        - TACKLE
                        - GOAL
                        - BEHIND
                      team: away
                      periods:
                        - 1
                        - 3
                        - 4
                      zones:
                        - DM
                      toPeriodSeconds: 100
                    - team: home
                      periods:
                        - 3
                      fromPeriodSeconds: 100
                      toPeriodSeconds: 300
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 4
                      fromPeriodSeconds: 100
          application/*+json:
            schema:
              $ref: '#/components/schemas/PostSquadMetricRequests'
            examples:
              All metrics for all periods and zones:
                summary: >-
                  Returns all kicks for all periods and zones that happened
                  within a game. This is assuming the match did not go into
                  overtime
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 1
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 2
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 3
                      zones:
                        - D50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - F50
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - AM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - MID
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - CB
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - DM
                    - metricCodes:
                        - KICK
                      periods:
                        - 4
                      zones:
                        - D50
              All kicks in a game split by context:
                summary: >-
                  Returns all kicks that happened within a match, split up by
                  different contexts. This is assuming the match did not go into
                  overtime
                value:
                  squadMetricRequests:
                    - context: For
                      metricCodes:
                        - KICK
                    - context: Against
                      metricCodes:
                        - KICK
                    - context: Diff
                      metricCodes:
                        - KICK
                    - context: PhysicalDiff
                      metricCodes:
                        - KICK
              All kicks in a game, per period for the home team:
                summary: >-
                  Returns all kicks that happened within a game for the home
                  team, split up by period. This is assuming the match did not
                  go into overtime
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 1
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 2
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 3
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 4
              All Handballs in a match as well all Handballs that occurred in the last 5 minutes of a period:
                summary: >-
                  Returns all Handballs that happened within a game as well as
                  all Handballs that occurred in the last 5 minutes of a period.
                  When used live, it only returns handballs in the last 5
                  minutes of the current period, not across the entire match
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                    - metricCodes:
                        - HANDBALL
                      lastXSeconds: 300
              All Handballs in a match that occurred during the 5 to 10 minute mark of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred during the 5 to 10 minute
                  mark of the match split by zone. Note that this will return
                  values across all periods
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
                      toPeriodSeconds: 600
              All Handballs in a match that happened during the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred within the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      toPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      toPeriodSeconds: 300
              All Handballs in a match that happened after the first 5 minutes of the match split by zone:
                summary: >-
                  Returns all Handballs that occurred after the first 5 minutes
                  of the match split by zone. Note that this will return values
                  across all periods
                value:
                  squadMetricRequests:
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - D50
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - DM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - MID
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - CB
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - AM
                      fromPeriodSeconds: 300
                    - metricCodes:
                        - HANDBALL
                      zones:
                        - F50
                      fromPeriodSeconds: 300
              Sample complex requests:
                summary: >-
                  Returns different combinations of metrics and filters within a
                  single request
                value:
                  squadMetricRequests:
                    - context: Diff
                      metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 1
                      zones:
                        - D50
                        - DM
                      lastXSeconds: 300
                    - context: Against
                      metricCodes:
                        - KICK
                        - HANDBALL
                        - TACKLE
                        - GOAL
                        - BEHIND
                      team: away
                      periods:
                        - 1
                        - 3
                        - 4
                      zones:
                        - DM
                      toPeriodSeconds: 100
                    - team: home
                      periods:
                        - 3
                      fromPeriodSeconds: 100
                      toPeriodSeconds: 300
                    - metricCodes:
                        - KICK
                      team: home
                      periods:
                        - 4
                      fromPeriodSeconds: 100
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSquadMetricResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PostSquadMetricResponse'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Teams have not been entered. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '413':
          description: Request Too Long
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/matches/{matchId}/stoppages:
    get:
      tags:
        - Matches
      summary: Get a list of all transactions for stoppages in the match
      operationId: Matches_GetStoppages
      parameters:
        - name: matchId
          in: path
          description: >-
            Unique identifier of a match (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 216085122
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchStoppages'
            text/json:
              schema:
                $ref: '#/components/schemas/MatchStoppages'
        '400':
          description: Invalid matchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Match has not started. No data available for this MatchId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Match Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/metadata/matchstatus:
    get:
      tags:
        - Metadata
      summary: Returns a list of possible Match Status
      operationId: Metadata_GetMatchStatus
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchStatus'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
  /v1/metadata/matchtypes:
    get:
      tags:
        - Metadata
      summary: Returns a list of possible Match Types
      operationId: Metadata_GetMatchTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
  /v1/metadata/chainstarttypes:
    get:
      tags:
        - Metadata
      summary: Returns a list of possible chain start types
      operationId: Metadata_GetChainStartTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChainType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChainType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
  /v1/metadata/chainendtypes:
    get:
      tags:
        - Metadata
      summary: Returns a list of possible chain end types
      operationId: Metadata_GetChainEndTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChainType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChainType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
  /v1/metadata/chainturnovertypes:
    get:
      tags:
        - Metadata
      summary: Returns a list of possible chain turnover type
      operationId: Metadata_GetChainTurnoverTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
  /v1/metadata/chainturnoverstates:
    get:
      tags:
        - Metadata
      summary: Returns a list of possible chain turnover states
      operationId: Metadata_GetChainTurnoverStates
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
  /v1/metadata/chainturnovercreations:
    get:
      tags:
        - Metadata
      summary: Returns a list of possible chain turnover creation types
      operationId: Metadata_GetChainTurnoverCreations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
  /v1/metadata/metrics:
    get:
      tags:
        - Metadata
      summary: Returns a list of implemented metrics
      operationId: Metadata_GetMetrics
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
  /v1/metadata/rotationtypes:
    get:
      tags:
        - Metadata
      summary: Returns a list of possible rotation types
      operationId: Metadata_RotationTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RotationType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RotationType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
  /v1/metadata/shotdetailtypes:
    get:
      tags:
        - Metadata
      summary: >-
        Returns possible types for shot details angle, distance, score and
        source
      operationId: Metadata_GetShotDetailTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
  /v1/metadata/metrics/glossary:
    get:
      tags:
        - Metadata
      summary: Provides a summary around each metric available within the platform
      operationId: Metadata_GetMetricGlossary
      parameters:
        - name: metric
          in: query
          description: Array of specific metric codes to get returned from the glossary.
          schema:
            type: array
            items:
              type: string
          example:
            - TACKLE
            - KICK
            - HANDBALL
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricGlossary'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricGlossary'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Requested metric does not exist in the glossary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/positiontypes:
    get:
      tags:
        - PositionTypes
      summary: Get a list of all available position types
      operationId: PositionTypes_GetPositionTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PositionType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PositionType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/positiontypes/{positionTypeId}:
    get:
      tags:
        - PositionTypes
      summary: Get details for a given position type
      operationId: PositionTypes_GetPositionTypeById
      parameters:
        - name: positionTypeId
          in: path
          description: Unique identifier of a PositionType (obtained from /positiontypes).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 69
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionType'
            text/json:
              schema:
                $ref: '#/components/schemas/PositionType'
        '400':
          description: Position Type ID needs to be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/positiontypes/{positionTypeId}/positions:
    get:
      tags:
        - PositionTypes
      summary: Get a list of positions for a position type
      operationId: PositionTypes_GetPositions
      parameters:
        - name: positionTypeId
          in: path
          description: Unique identifier of a PersonRole (obtained from /positiontypes).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 69
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Position'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Position'
        '400':
          description: Position Type ID needs to be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/positiontypes/position/{positionId}:
    get:
      tags:
        - PositionTypes
      summary: Get details for a given position
      operationId: PositionTypes_GetPositionById
      parameters:
        - name: positionId
          in: path
          description: >-
            Unique identifier of a position (obtained from
            /positionTypes/{positionTypeId}/positions).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 4141
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'
            text/json:
              schema:
                $ref: '#/components/schemas/Position'
        '400':
          description: Position Type ID needs to be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}/levels/{levelId}/seasons:
    get:
      tags:
        - Seasons
      summary: Get a list of available seasons within a given league and level
      operationId: Seasons_GetSeasons
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League (obtained from /leagues).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: levelId
          in: path
          description: >-
            Unique identifier of a Level (obtained from
            /leagues/{leagueId}/levels)
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueDetails'
        '400':
          description: League ID should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}:
    get:
      tags:
        - Seasons
      summary: Get details about a specific season within a given league and level
      operationId: Seasons_GetSeasonById
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League (obtained from /leagues).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: levelId
          in: path
          description: >-
            Unique identifier of a Level (obtained from
            /leagues/{leagueId}/levels)
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonDetails'
        '400':
          description: Season Id should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Season Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/fixture:
    get:
      tags:
        - Seasons
      summary: Get the fixture of matches for a season within a given league and level
      operationId: Seasons_Fixture
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League (obtained from /leagues).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: levelId
          in: path
          description: >-
            Unique identifier of a Level (obtained from
            /leagues/{leagueId}/levels)
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
        - name: squadId
          in: query
          description: >-
            Unique identifier of a Squad (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/squads
          schema:
            type: integer
            format: int32
          example: 10
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fixture'
        '400':
          description: Season Id should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Season Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/ladder:
    get:
      tags:
        - Seasons
      summary: Get the ladder for a season within a given league and level
      operationId: Seasons_GetSeasonLadder
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League (obtained from /leagues).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: levelId
          in: path
          description: >-
            Unique identifier of a Level (obtained from
            /leagues/{leagueId}/levels)
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
        - name: conference
          in: query
          description: Conference code by which to filter the ladder.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonLadder'
        '400':
          description: League ID should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/ladder/{roundNumber}:
    get:
      tags:
        - Seasons
      summary: >-
        Get the ladder after a specific round of a season within a given league
        and level
      operationId: Seasons_GetSeasonLadderForRound
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League (obtained from /leagues).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: levelId
          in: path
          description: >-
            Unique identifier of a Level (obtained from
            /leagues/{leagueId}/levels)
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
        - name: roundNumber
          in: path
          description: >-
            The round number within the season. The response includes all games
            up to and including this round.
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: conference
          in: query
          description: Conference code by which to filter the ladder.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonLadder'
        '400':
          description: League ID should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/squads:
    get:
      tags:
        - Seasons
      summary: >-
        Get a list of competing squads in a season within a given league and
        level
      operationId: Seasons_Squads
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League (obtained from /leagues).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: levelId
          in: path
          description: >-
            Unique identifier of a Level (obtained from
            /leagues/{leagueId}/levels)
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonSquads'
        '400':
          description: League ID should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/squads/{squadId}:
    get:
      tags:
        - Seasons
      summary: >-
        Get details about a single squad for a season within a given league and
        level
      operationId: Seasons_Squad
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League (obtained from /leagues).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: levelId
          in: path
          description: >-
            Unique identifier of a Level (obtained from
            /leagues/{leagueId}/levels)
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
        - name: squadId
          in: path
          description: >-
            Unique identifier of a Squad (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/squads
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 10
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonSquadDetail'
        '400':
          description: League ID should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/squads/{squadId}/persons:
    get:
      tags:
        - Seasons
      summary: >-
        Get a list of relevent persons for a single squad in a season within a
        given league and level
      operationId: Seasons_SquadPersons
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League (obtained from /leagues).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: levelId
          in: path
          description: >-
            Unique identifier of a Level (obtained from
            /leagues/{leagueId}/levels)
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
        - name: squadId
          in: path
          description: >-
            Unique identifier of a Squad (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/squads
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 10
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonSquadPersons'
        '400':
          description: League ID should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/conferences:
    get:
      tags:
        - Seasons
      summary: Get a list of Conferences for a given season
      operationId: Seasons_SeasonConferences
      parameters:
        - name: leagueId
          in: path
          description: Unique identifier of a League.
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 3
        - name: levelId
          in: path
          description: Unique identifier of a Level.
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
        - name: seasonId
          in: path
          description: Unique identifier of a Season.
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2020
        - name: conference
          in: query
          description: Filters the season conferences by Conference code
          schema:
            type: string
          example: A
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonSquads'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/seasons:
    get:
      tags:
        - Seasons
      summary: Get a list of available seasons for the AFL Premiership
      operationId: Seasons_GetDefaultSeasons
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/seasons/{seasonId}:
    get:
      tags:
        - Seasons
      summary: Get details about a specific season within the AFL Premiership
      operationId: Seasons_GetDefaultSeasonById
      parameters:
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonDetails'
        '400':
          description: Season Id should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Season Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/seasons/{seasonId}/fixture:
    get:
      tags:
        - Seasons
      summary: Get the fixture of matches for a season within the AFL Premiership
      operationId: Seasons_DefaultFixture
      parameters:
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fixture'
        '400':
          description: Season Id should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Season Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/seasons/{seasonId}/ladder:
    get:
      tags:
        - Seasons
      summary: Get the ladder for a season within the AFL Premiership
      operationId: Seasons_GetDefaultSeasonLadder
      parameters:
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonLadder'
        '400':
          description: Season Id should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Season Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/seasons/{seasonId}/ladder/{roundNumber}:
    get:
      tags:
        - Seasons
      summary: >-
        Get the ladder after a specific round of a season within the AFL
        Premiership
      operationId: Seasons_GetDefaultSeasonLadderForRound
      parameters:
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
        - name: roundNumber
          in: path
          description: >-
            The round number within the season. The response includes all games
            up to and including this round.
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonLadder'
        '400':
          description: Season Id should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Season Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/seasons/{seasonId}/squads:
    get:
      tags:
        - Seasons
      summary: Get a list of competing squads in a season within the AFL Premiership
      operationId: Seasons_DefaultSquads
      parameters:
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonSquads'
        '400':
          description: Season Id should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Season Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/seasons/{seasonId}/squads/{squadId}:
    get:
      tags:
        - Seasons
      summary: Get details about a single squad for a season within the AFL Premiership
      operationId: Seasons_DefaultSquad
      parameters:
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
        - name: squadId
          in: path
          description: >-
            Unique identifier of a Squad (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/squads
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 10
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonSquadDetail'
        '400':
          description: Season Id should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Season Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/seasons/{seasonId}/squad/{squadId}/persons:
    get:
      tags:
        - Seasons
      summary: >-
        Get a list of relevent persons for a single squad in a season within the
        AFL Premiership
      operationId: Seasons_DefaultSquadPersons
      parameters:
        - name: seasonId
          in: path
          description: >-
            Unique identifier of a Season (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons).
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 2021
        - name: squadId
          in: path
          description: >-
            Unique identifier of a Squad (obtained from
            /leagues/{leagueId}/levels/{levelId}/seasons/{seasonId}/squads
          required: true
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
          example: 10
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonSquadPersons'
        '400':
          description: Season Id should be a positive integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: >-
            User account is insufficiently licensed to access the requested
            season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Season Id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
  /v1/usage:
    get:
      tags:
        - Usage
      operationId: Usage_GetLatestUsage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUsage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    ApiUsage:
      type: object
      properties:
        requestsRemaining:
          type: integer
          format: int64
        quotaPeriod:
          $ref: '#/components/schemas/QuotaPeriodType'
        requestLimit:
          type: integer
          format: int64
        burstLimit:
          type: integer
          format: int64
        rateLimit:
          type: number
          format: double
        planName:
          type: string
          nullable: true
        items:
          type: array
          items:
            type: array
            items:
              type: integer
              format: int64
          nullable: true
        startDate:
          type: string
          nullable: true
        endDate:
          type: string
          nullable: true
      additionalProperties: false
    ChainScore:
      type: object
      properties:
        matchTrxId:
          type: integer
          description: Match transaction id of the score
          format: int32
          example: 2300
        player:
          $ref: '#/components/schemas/TransactionPerson'
        result:
          $ref: '#/components/schemas/TransactionResult'
      additionalProperties: false
      description: The details of the score (if any) that ended the chain
    ChainTurnover:
      type: object
      properties:
        turnoverTrxId:
          type: integer
          description: The turnover transaction id of the end of the chain
          format: int32
          example: 100
        creation:
          type: string
          description: >-
            Type of turnover creation (refer to metadata chain turn over
            creations for list of possible values)
          nullable: true
          example: Giveaway Unforced
        player:
          $ref: '#/components/schemas/TransactionPerson'
        state:
          type: string
          description: >-
            State when the turnover occurred (refer to metadata chain turn over
            state for list of possible values)
          nullable: true
          example: General Play
        type:
          type: string
          description: >-
            Turnover type (refer to metadata chain turn over state for list of
            possible values)
          nullable: true
          example: Kick
      additionalProperties: false
      description: Turnover details for a chain (if any)
    ChainType:
      type: object
      properties:
        id:
          type: integer
          description: Id of this Chain Type
          format: int32
          example: 4
        code:
          type: string
          description: Code of this Chain Type
          nullable: true
          example: BU
        name:
          type: string
          description: Name of this Chain Type
          nullable: true
          example: Ball Up
        type:
          type: string
          description: Type of this Chain Type
          nullable: true
          example: Stoppage
        typeCode:
          type: string
          description: Type code of this Chain Type
          nullable: true
          example: ST
      additionalProperties: false
      description: Chain type
    CoinTossResult:
      type: object
      properties:
        winningSquadId:
          type: integer
          description: The ID of the Squad that won the coin toss.
          format: int32
          example: 10
        decision:
          type: string
          description: The Decision of which direction the winning Squad will kick in.
          nullable: true
          example: Right
      additionalProperties: false
    Country:
      type: object
      properties:
        code:
          type: string
          description: The Code of the Country
          nullable: true
          example: AUS
        id:
          type: integer
          description: The ID of the Country
          format: int32
          example: 1
        name:
          type: string
          description: The Name of the Country
          nullable: true
          example: Australia
        state:
          $ref: '#/components/schemas/State'
      additionalProperties: false
    CurrentSeason:
      type: object
      properties:
        competitionId:
          type: integer
          description: The ID of the Competition this Season is being played in
          format: int32
          example: 2019010674
        championshipId:
          type: integer
          description: The ID of the Championship that this Season belongs to
          format: int32
          nullable: true
          example: 1
        seasonId:
          type: integer
          description: The SeasonID of the Current Season
          format: int32
          example: 1
      additionalProperties: false
      description: The Current Season within a League
    CurrentStint:
      type: object
      properties:
        elapsedSecs:
          type: number
          description: Elapsed seconds that this stint has been going for.
          format: double
          nullable: true
          example: 120
        period:
          type: string
          description: Period of this stint
          nullable: true
          example: '1'
        periodSecs:
          type: string
          description: Period seconds for the start of this stint
          nullable: true
          example: '0'
        reason:
          type: string
          description: Reason for this stint.
          nullable: true
          example: Injured
        reasonCode:
          type: string
          description: Reason code for this stint.
          nullable: true
          example: INJ
        status:
          type: string
          description: Status of this stint. OFF/ON
          nullable: true
          example: 'OFF'
      additionalProperties: false
    Dimensions:
      type: object
      properties:
        season:
          type: boolean
          description: Whether the metric is valid at a season level
          nullable: true
          example: true
        matchPeriod:
          type: boolean
          description: Whether the metric is valid at a match period level
          nullable: true
          example: true
        matchZone:
          type: boolean
          description: Whether the metric is valid at a match zone level
          nullable: true
          example: true
        matchContext:
          type: boolean
          description: Whether the metric is valid at a match level
          nullable: true
          example: true
        matchTransactions:
          type: boolean
          description: Whether the metric is valid at a transactional level
          nullable: true
          example: true
        gamesPlayedAverage:
          type: boolean
          description: Whether the metric is valid for calculating the average
          nullable: true
          example: true
        career:
          type: boolean
          description: Whether the metric is valid at a career level
          nullable: true
          example: true
        match:
          type: boolean
          description: Whether the metric is valid at a match level
          nullable: true
          example: true
      additionalProperties: false
    EntryLocation:
      type: object
      properties:
        x:
          type: number
          format: double
          nullable: true
        'y':
          type: number
          format: double
          nullable: true
        xStd:
          type: number
          format: double
          nullable: true
        yStd:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    EventLocation:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/Country'
        timezone:
          type: string
          description: The timezone in tzdb format.
          nullable: true
          example: Australia/Melbourne
      additionalProperties: false
    Fixture:
      type: object
      properties:
        competitionCode:
          type: string
          description: The code of the Competition this Season is being played in
          nullable: true
          example: AFL2019
        competitionId:
          type: integer
          description: The ID of the Competition this Season is being played in
          format: int32
          example: 2019010674
        competitionName:
          type: string
          description: The Name of the Competition this Season is being played in
          nullable: true
          example: AFL Premiership Season 2019
        competitionType:
          type: string
          description: The Type of the Competition this Season is being played in
          nullable: true
          example: Premiership
        endDate:
          type: string
          description: >-
            The UTC date this Season is complete (all matches complete) in
            format 'yyyy-MM-dd'
          format: date
          example: '2019-09-28'
        endYear:
          type: integer
          description: The UTC year this Season completes
          format: int32
          example: 2019
        firstMatchStart:
          type: string
          description: >-
            The UTC date and time of the first match of this Season in format
            'yyyy-MM-dd'T'HH:mm:ss.fffZ'
          format: date-time
          nullable: true
          example: '2019-03-21T08:25:00.000Z'
        phases:
          type: array
          items:
            $ref: '#/components/schemas/FixturePhase'
          description: List of Phases for the Season
          nullable: true
        seasonId:
          type: integer
          description: The ID of the Season
          format: int32
          example: 2019
        startDate:
          type: string
          description: The UTC date this Season commences in format 'yyyy-MM-dd'
          format: date
          example: '2019-03-21'
        startYear:
          type: integer
          description: The Year this Season commences in
          format: int32
          example: 2019
      additionalProperties: false
      description: A Fixture for a Season
    FixtureMatch:
      type: object
      properties:
        id:
          type: integer
          description: Id of the
          format: int32
          example: 21727
        roundOrder:
          type: integer
          description: Order number that the Match is played in the round
          format: int32
          nullable: true
          example: 21727
        squads:
          $ref: '#/components/schemas/FixtureMatchSquads'
        date:
          $ref: '#/components/schemas/MatchDate'
        status:
          $ref: '#/components/schemas/MatchStatusPeriod'
        type:
          $ref: '#/components/schemas/MatchType'
        venue:
          $ref: '#/components/schemas/MatchVenue'
        winningSquadId:
          type: integer
          description: Id of the squad that is winning
          format: int32
          nullable: true
      additionalProperties: false
      description: A Match
    FixtureMatchSquadScore:
      type: object
      properties:
        code:
          type: string
          description: Code of the Squad
          nullable: true
          example: AFC
        id:
          type: integer
          description: Id of the Squad
          format: int32
          example: 10
        name:
          type: string
          description: Name of the Squad
          nullable: true
          example: Adelaide Crows
        score:
          $ref: '#/components/schemas/Score'
      additionalProperties: false
    FixtureMatchSquads:
      type: object
      properties:
        away:
          $ref: '#/components/schemas/FixtureMatchSquadScore'
        home:
          $ref: '#/components/schemas/FixtureMatchSquadScore'
      additionalProperties: false
    FixturePhase:
      type: object
      properties:
        id:
          type: integer
          description: The Id of this Phase
          format: int32
          example: 11086
        name:
          type: string
          description: The Name of this Phase
          nullable: true
          example: Home & Away
        code:
          type: string
          description: The Code of this Phase
          nullable: true
          example: HA
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/FixtureRound'
          description: A list of Rounds for the Season
          nullable: true
      additionalProperties: false
      description: A Phase of a Season
    FixtureRound:
      type: object
      properties:
        code:
          type: string
          description: Code of the Round
          nullable: true
          example: R01
        id:
          type: integer
          description: Id of the Round
          format: int32
          example: 216238195
        matches:
          type: array
          items:
            $ref: '#/components/schemas/FixtureMatch'
          description: A list of Matches in the Round
          nullable: true
        name:
          type: string
          description: Name of the Round
          nullable: true
          example: Round 1
        number:
          type: integer
          description: >-
            Number order of the Round for the Season. Number spans across Phases
            in the Season
          format: int32
          nullable: true
          example: 1
        phaseNumber:
          type: integer
          description: >-
            Number order of the Round for the Phase. Number spans across Phases
            in the Season
          format: int32
          example: 1
      additionalProperties: false
      description: A Round of Matches in a Phase
    KeyMetrics:
      type: object
      properties:
        chainMetres:
          type: number
          description: Chain metres value
          format: double
          nullable: true
          example: 52
        chainMetresReply:
          type: number
          description: Chain metres reply value
          format: double
          nullable: true
          example: 34
        chainMetresNet:
          type: number
          description: Chain metres net value
          format: double
          nullable: true
          readOnly: true
          example: 18
      additionalProperties: false
    KeyTransactions:
      type: object
      properties:
        clearance:
          type: integer
          description: The transaction id of the clearance (if any) within the chain
          format: int32
          nullable: true
          example: 100
        inside50:
          type: integer
          description: The transaction id of the first inside 50 (if any) within the chain
          format: int32
          nullable: true
          example: 100
        nextChain:
          type: integer
          description: The start transaction id of the next chain (if any)
          format: int32
          nullable: true
          example: 600
        prevChain:
          type: integer
          description: The start transaction id of the previous chain (if any)
          format: int32
          nullable: true
          example: 600
        rebound50:
          type: integer
          description: The transaction id of the first rebound 50 (if any) within the chain
          format: int32
          nullable: true
          example: 100
        stoppage:
          type: integer
          description: The transaction id of the previous stoppage
          format: int32
          nullable: true
          example: 100
      additionalProperties: false
    Kicking:
      type: object
      properties:
        foot:
          type: string
          description: Description of kicking foot
          nullable: true
          example: Left
        intent:
          type: string
          description: Description of kicking intent
          nullable: true
          example: Lead
        distance:
          type: string
          description: Description of kicking distance
          nullable: true
          example: Chip
        direction:
          type: string
          description: Description of kicking direction
          nullable: true
          example: Forward
      additionalProperties: false
    LadderMatches:
      type: object
      properties:
        played:
          type: integer
          description: Number of games the Squad has Played
          format: int32
          example: 3
        win:
          type: integer
          description: Number of games the Squad has Won
          format: int32
          example: 2
        draw:
          type: integer
          description: Number of games the Squad has Drawn
          format: int32
          example: 1
        loss:
          type: integer
          description: Number of games the Squad has Lost
          format: int32
          example: 1
        winPct:
          type: number
          description: Win Percentage for the squad (Wins / Played) * 100
          format: double
          example: 50
      additionalProperties: false
      description: A Season within a League
    LadderScores:
      type: object
      properties:
        for:
          type: integer
          description: Total Points the Squad has scored
          format: int32
          example: 652
        forAverage:
          type: number
          description: Average Points scored by the Squad per match to 1 decimal place
          format: double
          example: 98.2
        against:
          type: integer
          description: Total Points the Squad has conceded
          format: int32
          example: 515
        againstAverage:
          type: number
          description: Average Points conceded by the Squad per match to 1 decimal place
          format: double
        margin:
          type: integer
          description: Total points difference in matches played by the Squad
          format: int32
          example: -24
        marginAverage:
          type: number
          description: >-
            Average points difference per match played by the Squad to 1 decimal
            place
          format: double
          example: -5.2
      additionalProperties: false
      description: A Season within a League
    League:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the League
          format: int32
          example: 1
        name:
          type: string
          description: Name of the League
          nullable: true
          example: Australian Football League
        code:
          type: string
          description: Code of the League
          nullable: true
          example: AFL
        gender:
          type: string
          description: Gender of the League
          nullable: true
          example: '1'
      additionalProperties: false
      description: A League
    LeagueDetails:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the League
          format: int32
          example: 1
        name:
          type: string
          description: Name of the League
          nullable: true
          example: Australian Football League
        code:
          type: string
          description: Code of the League
          nullable: true
          example: AFL
        gender:
          type: string
          description: Gender of the League
          nullable: true
          example: '1'
        seasons:
          type: array
          items:
            $ref: '#/components/schemas/Season'
          description: List of Seasons available for the League
          nullable: true
      additionalProperties: false
      description: A League
    LeagueLevel:
      type: object
      properties:
        league:
          $ref: '#/components/schemas/League'
        levels:
          type: array
          items:
            $ref: '#/components/schemas/Level'
          description: List of Levels for the League
          nullable: true
      additionalProperties: false
      description: A League
    LeagueLevelDetail:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the Level
          format: int32
          example: 1
        name:
          type: string
          description: Name of the Level
          nullable: true
          example: Seniors
        code:
          type: string
          description: Code of the Level
          nullable: true
          example: SEN
        league:
          $ref: '#/components/schemas/League'
        currentSeason:
          $ref: '#/components/schemas/CurrentSeason'
      additionalProperties: false
      description: A League Level
    Level:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the Level
          format: int32
          example: 1
        name:
          type: string
          description: Name of the Level
          nullable: true
          example: Seniors
        code:
          type: string
          description: Code of the Level
          nullable: true
          example: SEN
      additionalProperties: false
      description: A League
    MatchChain:
      type: object
      properties:
        end:
          $ref: '#/components/schemas/MatchChainEnd'
        id:
          type: integer
          description: The unique identifier of the chain
          format: int32
          example: 100
        keyTransactions:
          $ref: '#/components/schemas/KeyTransactions'
        period:
          type: integer
          description: The period in which the chain occurred
          format: int32
          example: 1
        squad:
          $ref: '#/components/schemas/Squad'
        start:
          $ref: '#/components/schemas/MatchChainStart'
        metrics:
          $ref: '#/components/schemas/KeyMetrics'
      additionalProperties: false
    MatchChainEnd:
      type: object
      properties:
        matchTrxId:
          type: integer
          description: The transaction id of the end of the chain
          format: int32
          example: 100
        periodSecs:
          type: integer
          description: The period seconds of the end of the chain
          format: int32
          example: 55
        score:
          $ref: '#/components/schemas/ChainScore'
        stateCode:
          type: string
          description: >-
            The state code of the end of the chain (refer to metadata chain
            types for list of possible values)
          nullable: true
          example: GOAL
        stateId:
          type: integer
          description: >-
            The state id of the end of the chain (refer to metadata chain types
            for list of possible values)
          format: int32
          example: 6
        stateName:
          type: string
          description: >-
            The state name of the end of the chain (refer to metadata chain
            types for list of possible values)
          nullable: true
          example: Goal
        stateType:
          type: string
          description: >-
            The state type of the end of the chain (refer to metadata chain
            types for list of possible values)
          nullable: true
          example: Score
        stateTypeCode:
          type: string
          description: >-
            The state type code of the end of the chain (refer to metadata chain
            types for list of possible values)
          nullable: true
          example: SC
        turnover:
          $ref: '#/components/schemas/ChainTurnover'
        x:
          type: number
          description: >-
            The x coordinate (in metres from the centre of the field) of the end
            of the chain
          format: double
          nullable: true
          example: 5.4
        'y':
          type: number
          description: >-
            The y coordinate (in metres from the centre of the field) of the end
            of the chain
          format: double
          nullable: true
          example: 5.4
        zone:
          type: string
          description: The zone of the end of the chain based on the squad in possession
          nullable: true
          example: F50
        zonePhysical:
          type: string
          description: The physical zone of the end of the chain
          nullable: true
          example: Right 50
      additionalProperties: false
    MatchChainStart:
      type: object
      properties:
        launchPlayer:
          $ref: '#/components/schemas/TransactionPerson'
        matchTrxId:
          type: integer
          description: The transaction id of the start of the chain
          format: int32
          example: 100
        periodSecs:
          type: integer
          description: The period seconds of the start of the chain
          format: int32
          example: 55
        stateCode:
          type: string
          description: >-
            The state code of the start of the chain (refer to metadata chain
            types for list of possible values)
          nullable: true
          example: CB
        stateId:
          type: integer
          description: >-
            The state id of the start of the chain (refer to metadata chain
            types for list of possible values)
          format: int32
          example: 1
        stateName:
          type: string
          description: >-
            The state name of the start of the chain (refer to metadata chain
            types for list of possible values)
          nullable: true
          example: Centre Bounce
        stateType:
          type: string
          description: >-
            The state type of the start of the chain (refer to metadata chain
            types for list of possible values)
          nullable: true
          example: Stoppage
        stateTypeCode:
          type: string
          description: >-
            The state type code of the start of the chain (refer to metadata
            chain types for list of possible values)
          nullable: true
          example: ST
        x:
          type: number
          description: >-
            The x coordinate (in metres from the centre of the field) of the
            start of the chain
          format: double
          nullable: true
          example: 5.4
        'y':
          type: number
          description: >-
            The y coordinate (in metres from the centre of the field) of the
            start of the chain
          format: double
          nullable: true
          example: 5.4
        zone:
          type: string
          description: The zone of the start of the chain based on the squad in possession
          nullable: true
          example: D50
        zonePhysical:
          type: string
          description: The physical zone of the start of the chain
          nullable: true
          example: Left 50
      additionalProperties: false
    MatchChains:
      type: object
      properties:
        matchId:
          type: integer
          description: The unique identifier for the match
          format: int32
          example: 216467491
        chains:
          type: array
          items:
            $ref: '#/components/schemas/MatchChain'
          description: The chains for the match
          nullable: true
      additionalProperties: false
    MatchDate:
      type: object
      properties:
        startDate:
          type: string
          description: The time the match starts/started localized for the venue.
          format: date
          nullable: true
          readOnly: true
          example: '2020-03-28'
        startTime:
          type: string
          description: The time the match starts/started localized for the venue.
          format: time
          nullable: true
          readOnly: true
          example: '19:40:00'
        utcMatchStart:
          type: string
          description: The time the match starts/started in UTC
          format: date-time
          nullable: true
          example: '2020-08-21T01:44:44.808Z'
      additionalProperties: false
    MatchEntries:
      type: object
      properties:
        matchId:
          type: integer
          description: The matchId
          format: int32
          example: 216085122
        entries:
          type: array
          items:
            $ref: '#/components/schemas/MatchEntry'
          description: The match entry details
          nullable: true
      additionalProperties: false
    MatchEntry:
      type: object
      properties:
        id:
          type: integer
          description: ID of the Match
          format: int32
          example: 216085122
        period:
          type: integer
          description: The period of the stat
          format: int32
          example: 1
        periodSecs:
          type: integer
          description: The periodSeconds of the stat
          format: int32
          nullable: true
          example: 10
        player:
          $ref: '#/components/schemas/MatchEntryPlayer'
        squad:
          $ref: '#/components/schemas/MatchEntrySquad'
        details:
          $ref: '#/components/schemas/MatchEntryDetails'
      additionalProperties: false
    MatchEntryDetails:
      type: object
      properties:
        type:
          type: string
          description: The type of entry
          nullable: true
          example: Kick
        result:
          $ref: '#/components/schemas/MatchEntryResult'
        source:
          $ref: '#/components/schemas/MatchSourceTrx'
        kick:
          $ref: '#/components/schemas/MatchEntryKick'
      additionalProperties: false
    MatchEntryKick:
      type: object
      properties:
        isGround:
          type: string
          description: Type of Kick for the entry
          nullable: true
          example: 'true'
        pressure:
          $ref: '#/components/schemas/MatchEntryPressure'
        foot:
          type: string
          description: Description of kicking foot
          nullable: true
          example: Left
        intent:
          type: string
          description: Description of kicking intent
          nullable: true
          example: Lead
        distance:
          type: string
          description: Description of kicking distance
          nullable: true
          example: Chip
        direction:
          type: string
          description: Description of kicking direction
          nullable: true
          example: Forward
        launchLocation:
          $ref: '#/components/schemas/EntryLocation'
        launchLocationRotated:
          $ref: '#/components/schemas/EntryLocation'
        resultLocation:
          $ref: '#/components/schemas/EntryLocation'
        resultLocationRotated:
          $ref: '#/components/schemas/EntryLocation'
        launchDistanceToGoal:
          type: number
          description: Distance to goal from the launch location of the kick
          format: double
          nullable: true
          example: 83.49
        resultDistanceToGoal:
          type: number
          description: Distance to goal from the Result location of the kick
          format: double
          nullable: true
          example: 34.59
      additionalProperties: false
    MatchEntryPlayer:
      type: object
      properties:
        id:
          type: integer
          description: Player ID of this Person
          format: int32
          example: 216085122
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
      additionalProperties: false
    MatchEntryPressure:
      type: object
      properties:
        name:
          type: string
          description: Description of Pressure level.
          nullable: true
          example: Corralling
        code:
          type: string
          description: Code of Pressure level.
          nullable: true
          example: CORR
        points:
          type: number
          description: Pressure points for this Pressure act
          format: double
          nullable: true
          example: 1.25
      additionalProperties: false
    MatchEntryResult:
      type: object
      properties:
        outcome:
          type: string
          description: Outcome of the entry result
          nullable: true
          example: Retain
      additionalProperties: false
    MatchEntrySquad:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the MatchEntry squad
          format: int32
          example: 130
        name:
          type: string
          description: The name of the squad
          nullable: true
          example: St Kilda
        code:
          type: string
          description: The code for the squad
          nullable: true
          example: STK
      additionalProperties: false
    MatchInfo:
      type: object
      properties:
        id:
          type: integer
          description: ID of the Match
          format: int32
          example: 216085122
        name:
          type: string
          description: Name of the Match
          nullable: true
          example: St Kilda v Hawthorn
        code:
          type: string
          description: Code of the Match
          nullable: true
          example: STK v HAW
        phaseId:
          type: integer
          description: The Phase ID to which this Match belongs
          format: int32
          nullable: true
          example: 11086
        seasonId:
          type: integer
          description: The Season ID to which this Match belongs
          format: int32
          example: 2020
        competitionId:
          type: integer
          description: The Competition ID to which this Match belongs
          format: int32
          example: 2020011086
        competitionName:
          type: string
          description: The Name of the Competition to which this Match belongs
          nullable: true
          example: AFL Premiership Season 2020
        roundNumber:
          type: integer
          description: >-
            The Number of the Round within the Season to which this Match
            belongs
          format: int32
          nullable: true
          example: 16
        phaseName:
          type: string
          description: The Name of the Phase to which this Match belongs
          nullable: true
          example: AFL 2020 Home and Away
        phaseRoundNumber:
          type: integer
          description: The Number of the Round within the Phase to which this Match belongs
          format: int32
          nullable: true
          example: 16
        result:
          type: string
          description: Result of the Match
          nullable: true
          example: St Kilda by 14 points.
        resultCode:
          type: string
          description: Result Code of the Match
          nullable: true
          example: STK by 14pts
        winningSquadId:
          type: integer
          description: ID of the winning squad
          format: int32
          nullable: true
          example: 130
        attendance:
          type: integer
          description: Attendance at the match
          format: int32
          nullable: true
          example: 2740
        leagueId:
          type: integer
          description: The matches league Id
          format: int32
          nullable: true
          example: 1
        levelId:
          type: integer
          description: The matches level Id
          format: int32
          nullable: true
          example: 1
        type:
          $ref: '#/components/schemas/MatchType'
        date:
          $ref: '#/components/schemas/MatchDate'
        time:
          $ref: '#/components/schemas/MatchTime'
        venue:
          $ref: '#/components/schemas/MatchVenue'
        status:
          $ref: '#/components/schemas/MatchStatusPeriod'
        coinToss:
          $ref: '#/components/schemas/CoinTossResult'
        home:
          $ref: '#/components/schemas/MatchSquad'
        away:
          $ref: '#/components/schemas/MatchSquad'
        periods:
          type: array
          items:
            $ref: '#/components/schemas/MatchPeriod'
          nullable: true
        lastModified:
          $ref: '#/components/schemas/MatchLastModified'
      additionalProperties: false
    MatchLastModified:
      type: object
      properties:
        statisticUpdate:
          type: string
          description: The last UTC time that a statistic was last updated for a match
          format: date-time
          nullable: true
          example: '2020-08-21T02:21:42.105Z'
      additionalProperties: false
    MatchMetricLeader:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        personId:
          type: integer
          description: Person ID of this Person
          format: int32
          example: 291856
        jumperNumber:
          type: integer
          description: Jumper Number for the Match Person
          format: int32
          nullable: true
          example: 32
        squadId:
          type: integer
          description: Person squad id
          format: int32
          example: 10
        squadName:
          type: string
          description: Person squad name
          nullable: true
          example: Adelaide
        squadCode:
          type: string
          description: Person squad code
          nullable: true
          example: ADE
        order:
          type: integer
          description: >-
            Dense Rank (1,2,3,4,5), sorted by metric value, then player surname,
            then fullname
          format: int32
          example: 1
        rank:
          type: integer
          description: Rank allowing ties (eg. 1,2,2,2,5) sorted by metric value only
          format: int32
          example: 1
        value:
          type: number
          description: Metric total for the Match for the Player
          format: double
          nullable: true
          example: 1
        valueDisplay:
          type: string
          description: Text representation of metric value, using default formatting.
          nullable: true
          example: 50.5%
      additionalProperties: false
    MatchMetricLeaders:
      type: object
      properties:
        id:
          type: integer
          description: ID of the Metric
          format: int32
          example: 12
        code:
          type: string
          description: Metric code
          nullable: true
          example: CLEARANCE
        name:
          type: string
          description: Metric name
          nullable: true
          example: Clearance
        namePlural:
          type: string
          description: Metric name as a plural
          nullable: true
          example: Clearances
        persons:
          type: array
          items:
            $ref: '#/components/schemas/MatchMetricLeader'
          description: List of Persons making up the top leaders of a statistical category
          nullable: true
      additionalProperties: false
    MatchMetricPlayer:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        personId:
          type: integer
          description: Person ID of this Person
          format: int32
          example: 291856
        jumperNumber:
          type: integer
          description: Jumper Number for the Match Person
          format: int32
          nullable: true
          example: 32
        statistics:
          type: array
          items:
            $ref: '#/components/schemas/MatchMetricStatistic'
          description: the statistics for this player for the match
          nullable: true
      additionalProperties: false
    MatchMetricPlayerSquad:
      type: object
      properties:
        code:
          type: string
          description: Code of the Squad
          nullable: true
          example: AFC
        id:
          type: integer
          description: Id of the Squad
          format: int32
          example: 10
        name:
          type: string
          description: Name of the Squad
          nullable: true
          example: Adelaide Crows
        players:
          type: array
          items:
            $ref: '#/components/schemas/MatchMetricPlayer'
          description: the players for this squad in this match
          nullable: true
      additionalProperties: false
    MatchMetricSquad:
      type: object
      properties:
        code:
          type: string
          description: Code of the Squad
          nullable: true
          example: AFC
        id:
          type: integer
          description: Id of the Squad
          format: int32
          example: 10
        name:
          type: string
          description: Name of the Squad
          nullable: true
          example: Adelaide Crows
        statistics:
          type: array
          items:
            $ref: '#/components/schemas/MatchMetricStatistic'
          description: the statistics for this player for the match
          nullable: true
      additionalProperties: false
    MatchMetricStatistic:
      type: object
      properties:
        id:
          type: integer
          description: ID of the Metric
          format: int32
          example: 12
        code:
          type: string
          description: Metric code
          nullable: true
          example: CLEARANCE
        name:
          type: string
          description: Metric name
          nullable: true
          example: Clearance
        namePlural:
          type: string
          description: Metric name as a plural
          nullable: true
          example: Clearances
        valueDisplay:
          type: string
          description: the display value for this metric
          nullable: true
        value:
          type: number
          description: the numeric value for this metric
          format: double
          nullable: true
          example: 1
      additionalProperties: false
    MatchMetrics:
      type: object
      properties:
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 21727
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/MetricMetaData'
          nullable: true
      additionalProperties: false
    MatchOfficial:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        personId:
          type: integer
          description: Person ID of this Person
          format: int32
          example: 291856
        jumperNumber:
          type: integer
          description: Jumper Number for the Match Person
          format: int32
          nullable: true
          example: 32
        positions:
          $ref: '#/components/schemas/MatchPositions'
      additionalProperties: false
      description: An Official participating in a Match, for example, an Umpire.
    MatchPeriod:
      type: object
      properties:
        period:
          type: integer
          description: The number of the last/current Period
          format: int32
          example: 2
        utcPeriodStart:
          type: string
          description: The date and time of the Period Start
          format: date-time
          nullable: true
          example: '2020-08-21T01:44:44.808Z'
        utcPeriodEnd:
          type: string
          description: The date and time of the Period End
          format: date-time
          nullable: true
          example: '2020-08-21T02:24:46.808Z'
        periodSecs:
          type: integer
          description: The number of the last/current Period
          format: int32
          nullable: true
          example: 2
      additionalProperties: false
    MatchPersonPosition:
      type: object
      properties:
        id:
          type: integer
          description: Id of the position played.
          format: int32
          example: 16
        code:
          type: string
          description: The code of the position played.
          nullable: true
          example: FP
        name:
          type: string
          description: The name of the position played.
          nullable: true
          example: Forward Pocket
      additionalProperties: false
      description: >-
        Class MatchPersonPosition represents the position a player has taken in
        a match.
    MatchPersons:
      type: object
      properties:
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 21727
        squads:
          $ref: '#/components/schemas/MatchPersonsSquads'
        officials:
          type: array
          items:
            $ref: '#/components/schemas/MatchOfficial'
          description: Match officials person
          nullable: true
      additionalProperties: false
      description: >-
        Returns a List of Persons involved in the Match for each Squad as well
        as Officials
    MatchPersonsSquad:
      type: object
      properties:
        code:
          type: string
          description: Code of the Squad
          nullable: true
          example: AFC
        id:
          type: integer
          description: Id of the Squad
          format: int32
          example: 10
        name:
          type: string
          description: Name of the Squad
          nullable: true
          example: Adelaide Crows
        players:
          type: array
          items:
            $ref: '#/components/schemas/MatchPlayer'
          description: List of Persons for a Squad involved in a Match
          nullable: true
      additionalProperties: false
      description: Contains Persons for a Squad involved in a Match
    MatchPersonsSquads:
      type: object
      properties:
        away:
          $ref: '#/components/schemas/MatchPersonsSquad'
        home:
          $ref: '#/components/schemas/MatchPersonsSquad'
      additionalProperties: false
      description: Squads and their Persons participating in a Match
    MatchPlayer:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        personId:
          type: integer
          description: Person ID of this Person
          format: int32
          example: 291856
        jumperNumber:
          type: integer
          description: Jumper Number for the Match Person
          format: int32
          nullable: true
          example: 32
        dateOfBirth:
          type: string
          description: Person date of birth in format 'yyyy-MM-dd'
          format: date
          nullable: true
          example: '1995-03-21'
        matchAge:
          type: number
          description: Age of the Person at the time the Match took place
          format: double
          nullable: true
          example: 34.25
        height:
          type: number
          description: Height, in cm, of the Person in the Match
          format: double
          nullable: true
          example: 189
        weight:
          type: number
          description: Weight, in kg, of the Person in the Match
          format: double
          nullable: true
          example: 92
        firstname:
          type: string
          description: First name of this Person
          nullable: true
          example: Tom
        surname:
          type: string
          description: Surname of this Person
          nullable: true
          example: Mitchell
        positions:
          $ref: '#/components/schemas/MatchPositions'
      additionalProperties: false
      description: A Person participating in a Match as a Player for a Squad.
    MatchPositions:
      type: object
      properties:
        selected:
          $ref: '#/components/schemas/MatchPersonPosition'
        season:
          $ref: '#/components/schemas/MatchPersonPosition'
      additionalProperties: false
    MatchRotations:
      type: object
      properties:
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 216467491
        home:
          $ref: '#/components/schemas/RotationSquad'
        away:
          $ref: '#/components/schemas/RotationSquad'
        rotations:
          type: array
          items:
            $ref: '#/components/schemas/RotationTransaction'
          description: Rotations
          nullable: true
      additionalProperties: false
    MatchScore:
      type: object
      properties:
        away:
          $ref: '#/components/schemas/MatchSquadScoreDetails'
        home:
          $ref: '#/components/schemas/MatchSquadScoreDetails'
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 216085122
        result:
          type: string
          description: Result of the Match
          nullable: true
          example: St Kilda by 14 points.
        resultCode:
          type: string
          description: Result Code of the Match
          nullable: true
          example: STK by 14pts
        winningSquadId:
          type: integer
          description: ID of the winning squad
          format: int32
          nullable: true
          example: 130
      additionalProperties: false
      description: Score object for the Match
    MatchShots:
      type: object
      properties:
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 216467491
        shots:
          type: array
          items:
            $ref: '#/components/schemas/ShotTransaction'
          description: Shots
          nullable: true
      additionalProperties: false
    MatchSourceTrx:
      type: object
      properties:
        name:
          type: string
          description: Pressure information
          nullable: true
        type:
          type: string
          description: Type of Kick for the entry
          nullable: true
          example: 'true'
      additionalProperties: false
    MatchSquad:
      type: object
      properties:
        code:
          type: string
          description: Code of the Squad
          nullable: true
          example: AFC
        id:
          type: integer
          description: Id of the Squad
          format: int32
          example: 10
        name:
          type: string
          description: Name of the Squad
          nullable: true
          example: Adelaide Crows
        score:
          $ref: '#/components/schemas/SquadScore'
      additionalProperties: false
      description: The match squad with match score summary.
    MatchSquadScoreDetails:
      type: object
      properties:
        goals:
          type: integer
          description: Number of goals the squad scored
          format: int32
          nullable: true
          example: 11
        behinds:
          type: integer
          description: Number of behinds the squad scored
          format: int32
          nullable: true
          example: 14
        points:
          type: integer
          description: Points total for the squad
          format: int32
          nullable: true
          example: 80
        margin:
          type: integer
          description: Score margin against opponent
          format: int32
          example: 14
        result:
          type: string
          description: Match result
          nullable: true
          example: Win
        resultCode:
          type: string
          description: Match result code
          nullable: true
          example: W
        id:
          type: integer
          description: ID of the squad
          format: int32
          example: 130
        name:
          type: string
          description: Name of the squad
          nullable: true
          example: St Kilda
        code:
          type: string
          description: Code of the squad
          nullable: true
          example: STK
        periods:
          type: array
          items:
            $ref: '#/components/schemas/PeriodScore'
          description: Score details for each period
          nullable: true
      additionalProperties: false
    MatchStatisticLeaders:
      type: object
      properties:
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 21727
        statistics:
          type: array
          items:
            $ref: '#/components/schemas/MatchMetricLeaders'
          description: List of statistics
          nullable: true
      additionalProperties: false
    MatchStatisticPlayers:
      type: object
      properties:
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 21727
        squads:
          type: array
          items:
            $ref: '#/components/schemas/MatchMetricPlayerSquad'
          description: List of squads
          nullable: true
      additionalProperties: false
    MatchStatisticSquads:
      type: object
      properties:
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 21727
        squads:
          type: array
          items:
            $ref: '#/components/schemas/MatchMetricSquad'
          description: List of squads
          nullable: true
      additionalProperties: false
    MatchStatus:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the match status
          format: int32
          example: 8
        name:
          type: string
          description: The Name of the match status
          nullable: true
          example: Scheduled
        code:
          type: string
          description: The Code of the match status
          nullable: true
          example: '2'
        typeId:
          type: integer
          description: The Type Id of the match status
          format: int32
        typeName:
          type: string
          description: The Type Name of the match status
          nullable: true
          example: Upcoming
      additionalProperties: false
      description: >-
        A Status of a Match (refer to metadata matchstatus for list of possible
        values)
    MatchStatusPeriod:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the match status
          format: int32
          example: 8
        name:
          type: string
          description: The Name of the match status
          nullable: true
          example: Scheduled
        code:
          type: string
          description: The Code of the match status
          nullable: true
          example: '2'
        typeId:
          type: integer
          description: The Type Id of the match status
          format: int32
        typeName:
          type: string
          description: The Type Name of the match status
          nullable: true
          example: Upcoming
        period:
          type: integer
          description: The number of the last/current Period
          format: int32
          nullable: true
          example: 2
        periodSecs:
          type: integer
          description: The Seconds elapsed in the Period
          format: int32
          nullable: true
          example: 765
        periodDisplay:
          type: string
          description: A display string of the Period and elapsed time
          nullable: true
          example: Q2 12:45
        remainingSecs:
          type: integer
          description: The Seconds remaining in the Period.
          format: int32
          nullable: true
          example: 234
        remainingDisplay:
          type: string
          description: A display string of the Period and remaining time.
          nullable: true
          example: Q2 03:54
        remainingTime:
          type: string
          description: A display string of the remaining time.
          nullable: true
          example: '03:54'
      additionalProperties: false
    MatchStoppage:
      type: object
      properties:
        id:
          type: integer
          description: The match transaction Id
          format: int32
          example: 100
        name:
          type: string
          description: The name of the transaction
          nullable: true
          example: Centre Bounce
        code:
          type: string
          description: The name of the stat
          nullable: true
          example: CEBO
        period:
          type: integer
          description: The period of the stat
          format: int32
          example: 1
        periodSeconds:
          type: integer
          description: The periodSeconds of the stat
          format: int32
          example: 0
        zonePhysical:
          type: string
          description: The physical zone of the start of the stoppage
          nullable: true
          example: Midfield
        location:
          $ref: '#/components/schemas/StoppageGraphicalDetails'
        attendance:
          $ref: '#/components/schemas/StoppageAttendanceTrx'
        hitout:
          $ref: '#/components/schemas/StoppageHitoutTrx'
        firstPossession:
          $ref: '#/components/schemas/StoppageFirstPossessionTrx'
        clearance:
          $ref: '#/components/schemas/StoppageClearanceTrx'
        stoppageExit:
          $ref: '#/components/schemas/StoppageExitTrx'
      additionalProperties: false
    MatchStoppages:
      type: object
      properties:
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 21727
        stoppages:
          type: array
          items:
            $ref: '#/components/schemas/MatchStoppage'
          description: The Stoppages for the match
          nullable: true
      additionalProperties: false
    MatchTime:
      type: object
      properties:
        utcMatchStartActual:
          type: string
          description: The time the match actually started in UTC
          format: date-time
          nullable: true
          example: '2020-08-21T01:44:44.808Z'
        utcMatchEndActual:
          type: string
          description: The time the match ended in UTC
          format: date-time
          nullable: true
          example: '2020-08-21T01:44:44.808Z'
        periodSecs:
          type: integer
          description: The total period seconds of the match
          format: int32
          nullable: true
          example: 6176
        duration:
          type: string
          description: The duration of the match
          nullable: true
          example: '102:56'
      additionalProperties: false
    MatchTransaction:
      type: object
      properties:
        id:
          type: integer
          description: The match trx id
          format: int32
          example: 100
        name:
          type: string
          description: The Statistic Description
          nullable: true
          example: Centre Bounce Clearance
        code:
          type: string
          description: The Statistic Code
          nullable: true
          example: CBCL
        period:
          type: integer
          description: Period of the stat
          format: int32
          example: 1
        periodSecs:
          type: integer
          description: Period seconds of the stat using Countup Clock
          format: int32
          example: 60
        homeScore:
          type: integer
          description: Home Score at time of event (including this event)
          format: int32
          example: 6
        awayScore:
          type: integer
          description: Away Score at time of event (including this event)
          format: int32
          example: 12
        squad:
          $ref: '#/components/schemas/TransactionSquad'
        zonePhysical:
          type: string
          description: Physical Zone of the event.
          nullable: true
          example: L50
        zoneLogical:
          type: string
          description: Logical Zone of the event.
          nullable: true
          example: D50
        sequence:
          type: integer
          description: For multiplayer events, the sequence number in the split event
          format: int32
          nullable: true
          example: 1
        person:
          $ref: '#/components/schemas/TransactionPerson'
        location:
          $ref: '#/components/schemas/TransactionLocation'
        locationRotated:
          $ref: '#/components/schemas/TransactionLocation'
        pressure:
          $ref: '#/components/schemas/Pressure'
        kicking:
          $ref: '#/components/schemas/Kicking'
        details:
          $ref: '#/components/schemas/TransactionDetails'
      additionalProperties: false
    MatchTransactions:
      type: object
      properties:
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 21727
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/MatchTransaction'
          description: The Transactions for the match
          nullable: true
      additionalProperties: false
    MatchType:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the match type
          format: int32
          example: 1
        name:
          type: string
          description: The Name of the match type
          nullable: true
          example: Regular Season
        code:
          type: string
          description: The Code of the match type
          nullable: true
          example: REG
      additionalProperties: false
      description: Type of Match (refer to metadata matchType for list of possible values)
    MatchVenue:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the Venue
          format: int32
          example: 190
        code:
          type: string
          description: The code of the Venue
          nullable: true
          example: MRVL
        name:
          type: string
          description: The Name of the Venue
          nullable: true
          example: Marvel Stadium
        timeZone:
          type: string
          description: The Timezone of the Venue
          nullable: true
          example: Australia/Melbourne
      additionalProperties: false
      description: Venue of a Match
    MatchVenueDetails:
      type: object
      properties:
        code:
          type: string
          description: The Code of the Venue
          nullable: true
          example: MS
        dimensions:
          $ref: '#/components/schemas/VenueDimensions'
        id:
          type: integer
          description: The ID of the Venue
          format: int32
          nullable: true
          example: 190
        location:
          $ref: '#/components/schemas/EventLocation'
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 21727
        name:
          type: string
          description: The Name of the Venue
          nullable: true
          example: Marvel Stadium
        home:
          $ref: '#/components/schemas/MatchVenueSquad'
        away:
          $ref: '#/components/schemas/MatchVenueSquad'
      additionalProperties: false
      description: Venue of a Match
    MatchVenueSquad:
      type: object
      properties:
        code:
          type: string
          description: Code of the Squad
          nullable: true
          example: AFC
        id:
          type: integer
          description: Id of the Squad
          format: int32
          example: 10
        name:
          type: string
          description: Name of the Squad
          nullable: true
          example: Adelaide Crows
        interstateTravel:
          type: boolean
          description: Whether the team is travelling interstate for the match or not
          nullable: true
          example: true
      additionalProperties: false
    MetricGlossary:
      type: object
      properties:
        code:
          type: string
          description: The metrics code used within the platform
          nullable: true
          example: SCORE_INVOLVEMENT_PCT
        name:
          type: string
          description: The metrics human-readable name
          nullable: true
          example: Score Involvement Percentage
        description:
          type: string
          description: Short description of what the metric is
          nullable: true
          example: Percent of chain involvements where the chain lead to a score
        technicalDescription:
          type: string
          description: Technical description of the metric
          nullable: true
        edgeCases:
          type: string
          description: Edge cases if any for the metric
          nullable: true
        aggregateFormula:
          type: string
          description: Aggregate Formula of the metric
          nullable: true
        level:
          type: string
          description: Applicable metric levels
          nullable: true
          example: Player Only
        format:
          type: string
          description: Applicable metric formats
          nullable: true
          example: Integer
        formatAvg:
          type: string
          description: Applicable metric format averages
          nullable: true
          example: Percentage One Decimal
        dimensions:
          $ref: '#/components/schemas/Dimensions'
      additionalProperties: false
    MetricMetaData:
      type: object
      properties:
        id:
          type: integer
          description: Unique id of the metric
          format: int32
          example: 732
        code:
          type: string
          description: Metric code
          nullable: true
          example: ABSENCE_CENTRE_BOUNCE
        codeShort:
          type: string
          description: Short code for the metric
          nullable: true
          example: CBA
        name:
          type: string
          description: Name of the metric
          nullable: true
          example: Centre Bounce Absence
        namePlural:
          type: string
          description: Plural name for the metric
          nullable: true
          example: Centre Bounce Absences
        nameShort:
          type: string
          description: Short name for the metric
          nullable: true
          example: CB Absence
        nameDisplay:
          type: string
          description: Display name of the metric
          nullable: true
          example: centreBounceAbsence
        description:
          type: string
          description: Description of the metric
          nullable: true
          example: Not starting inside the centre square at a centre bounce.
        levelId:
          type: integer
          description: LevelId of the metric
          format: int32
          example: 8
        level:
          type: string
          description: Level of the metric (Player/Squad/Player+Squad)
          nullable: true
          example: Player Only
        formatId:
          type: integer
          description: Format Id of the metric
          format: int32
          example: 100
        format:
          type: string
          description: Format of the metric
          nullable: true
          example: Integer
        formatAvgId:
          type: integer
          description: Format avg Id of the metric
          format: int32
          example: 101
        formatAvg:
          type: string
          description: Format avg of the metric
          nullable: true
          example: One Decimal
        transaction:
          type: boolean
          description: Whether the metric is valid at a transactional level
          example: true
      additionalProperties: false
    PeriodScore:
      type: object
      properties:
        goals:
          type: integer
          description: Number of goals the squad scored
          format: int32
          nullable: true
          example: 11
        behinds:
          type: integer
          description: Number of behinds the squad scored
          format: int32
          nullable: true
          example: 14
        points:
          type: integer
          description: Points total for the squad
          format: int32
          nullable: true
          example: 80
        margin:
          type: integer
          description: Score margin against opponent
          format: int32
          example: 14
        result:
          type: string
          description: Match result
          nullable: true
          example: Win
        resultCode:
          type: string
          description: Match result code
          nullable: true
          example: W
        period:
          type: integer
          description: Period number
          format: int32
          example: 1
        goalsCumulative:
          type: integer
          description: Cumulative Goals scored for the match up to the end of this period
          format: int32
          example: 11
        behindsCumulative:
          type: integer
          description: Cumulative Behinds scored for the match up to the end of this period
          format: int32
          example: 14
        pointsCumulative:
          type: integer
          description: Cumulative Points for the match up to the end of this period
          format: int32
          example: 80
        marginCumulative:
          type: integer
          description: Cumulative Margin for the match up to the end of this period
          format: int32
          example: 14
      additionalProperties: false
    Person:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        personId:
          type: integer
          description: Person ID of this Person
          format: int32
          example: 291856
      additionalProperties: false
    PersonRole:
      type: object
      properties:
        id:
          type: integer
          description: ID of the Person Role
          format: int32
          example: 1
        code:
          type: string
          description: Code of the Person Role
          nullable: true
          example: PLY
        description:
          type: string
          description: Description of the Person Role
          nullable: true
          example: Player
        name:
          type: string
          description: Name of the Person Role
          nullable: true
          example: Player
      additionalProperties: false
    Position:
      type: object
      properties:
        code:
          type: string
          description: Code of the Position
          nullable: true
          example: BP
        description:
          type: string
          description: Description of the Position
          nullable: true
          example: Left Back Pocket
        id:
          type: integer
          description: ID of the Position
          format: int32
          example: 4141
        name:
          type: string
          description: Name of the Position
          nullable: true
          example: Back Pocket
      additionalProperties: false
    PositionType:
      type: object
      properties:
        code:
          type: string
          description: Code of the Position Type
          nullable: true
          example: SEL
        description:
          type: string
          description: Description of the Position Type
          nullable: true
          example: Selected Position
        id:
          type: integer
          description: ID of the Position Type
          format: int32
          example: 69
        name:
          type: string
          description: Name of the Position Type
          nullable: true
          example: Selected Position
        role:
          $ref: '#/components/schemas/PersonRole'
      additionalProperties: false
    PostMatchStatisticPlayers:
      type: object
      properties:
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 21727
        squads:
          type: array
          items:
            $ref: '#/components/schemas/MatchMetricPlayerSquad'
          description: List of squads
          nullable: true
        id:
          type: string
          description: Identification of the Metric request
          nullable: true
      additionalProperties: false
    PostMatchStatisticSquads:
      type: object
      properties:
        matchId:
          type: integer
          description: ID of the Match
          format: int32
          example: 21727
        squads:
          type: array
          items:
            $ref: '#/components/schemas/MatchMetricSquad'
          description: List of squads
          nullable: true
        id:
          type: string
          description: Identification of the Metric request
          nullable: true
      additionalProperties: false
    PostPlayerMetricRequest:
      type: object
      properties:
        id:
          type: string
          description: >-
            Metric request ID to use for request identification (auto generated
            if not supplied)
          nullable: true
        metricCodes:
          type: array
          items:
            type: string
          description: >-
            List of specific metric codes to get returned. This will result in
            the endpoint only returning these specific metrics. Note this
            endpoint is case sensitive and only works with a metrics code
          nullable: true
        team:
          type: string
          description: Team to return stats for, 'away' or 'home', case sensitive
          nullable: true
        periods:
          type: array
          items:
            type: integer
            format: int32
          description: >-
            List of integers identifying periods used to filter the metrics
            returned
          nullable: true
        zones:
          type: array
          items:
            type: string
          description: >-
            List of string identifying zones used to filter the metrics
            returned. Supported values are D50, DM, MID, CB, AM and F50
          nullable: true
        lastXSeconds:
          type: integer
          description: >-
            Limits statistics to counting events that occurred in the last X
            number of seconds of the match
          format: int32
          nullable: true
        fromPeriodSeconds:
          type: integer
          description: >-
            Limits statistics to counting events that occurred on or after this
            number of seconds in the current period
          format: int32
          nullable: true
        toPeriodSeconds:
          type: integer
          description: >-
            Limits statistics to counting events that occurred on or before this
            number of seconds in the current period
          format: int32
          nullable: true
      additionalProperties: false
    PostPlayerMetricRequests:
      type: object
      properties:
        playerMetricRequests:
          type: array
          items:
            $ref: '#/components/schemas/PostPlayerMetricRequest'
          description: List of player metric requests to return stats for
          nullable: true
      additionalProperties: false
    PostPlayerMetricResponse:
      type: object
      properties:
        playerStatistics:
          type: array
          items:
            $ref: '#/components/schemas/PostMatchStatisticPlayers'
          nullable: true
        playerMetricRequests:
          type: array
          items:
            $ref: '#/components/schemas/PostPlayerMetricRequest'
          nullable: true
      additionalProperties: false
    PostSquadMetricRequest:
      type: object
      properties:
        id:
          type: string
          description: >-
            Metric request ID to use for request identification (auto generated
            if not supplied)
          nullable: true
        metricCodes:
          type: array
          items:
            type: string
          description: >-
            List of specific metric codes to get returned. This will result in
            the endpoint only returning these specific metrics. Note this
            endpoint is case sensitive and only works with a metrics code
          nullable: true
        team:
          type: string
          description: Team to return stats for, 'away' or 'home', case sensitive
          nullable: true
        periods:
          type: array
          items:
            type: integer
            format: int32
          description: >-
            List of integers identifying periods used to filter the metrics
            returned
          nullable: true
        zones:
          type: array
          items:
            type: string
          description: >-
            List of string identifying zones used to filter the metrics
            returned. Supported values are D50, DM, MID, CB, AM and F50
          nullable: true
        lastXSeconds:
          type: integer
          description: >-
            Limits statistics to counting events that occurred in the last X
            number of seconds of the match
          format: int32
          nullable: true
        fromPeriodSeconds:
          type: integer
          description: >-
            Limits statistics to counting events that occurred on or after this
            number of seconds in the current period
          format: int32
          nullable: true
        toPeriodSeconds:
          type: integer
          description: >-
            Limits statistics to counting events that occurred on or before this
            number of seconds in the current period
          format: int32
          nullable: true
        context:
          type: string
          description: >-
            The context of the metrics returned. Supported values are For,
            Against, Diff, PhysicalDiff
          nullable: true
      additionalProperties: false
    PostSquadMetricRequests:
      type: object
      properties:
        squadMetricRequests:
          type: array
          items:
            $ref: '#/components/schemas/PostSquadMetricRequest'
          description: List of squad metric requests to return stats for
          nullable: true
      additionalProperties: false
    PostSquadMetricResponse:
      type: object
      properties:
        squadStatistics:
          type: array
          items:
            $ref: '#/components/schemas/PostMatchStatisticSquads'
          nullable: true
        squadMetricRequests:
          type: array
          items:
            $ref: '#/components/schemas/PostSquadMetricRequest'
          nullable: true
      additionalProperties: false
    Pressure:
      type: object
      properties:
        name:
          type: string
          description: Description of Pressure level.
          nullable: true
          example: Corralling
        code:
          type: string
          description: Code of Pressure level.
          nullable: true
          example: CORR
        points:
          type: number
          description: Pressure points for this Pressure act
          format: double
          nullable: true
          example: 1.25
        squad:
          $ref: '#/components/schemas/Squad'
        players:
          type: array
          items:
            $ref: '#/components/schemas/PressurePerson'
          description: "Pressure Players involved\r\nPlayer with Role = 1: First player applying pressure\r\nPlayer with Role = 2: Second player applying pressure"
          nullable: true
      additionalProperties: false
    PressurePerson:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        personId:
          type: integer
          description: Person ID of this Person
          format: int32
          example: 291856
        role:
          type: integer
          description: "Role number\r\n1. Player\r\n2. PlayerSecond"
          format: int32
          example: 1
      additionalProperties: false
      description: >-
        Person Information applying pressure.  Role dictates the role of the
        player (first/second player applying pressure)
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    QuotaPeriodType:
      type: object
      properties:
        value:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    RotationPerson:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        personId:
          type: integer
          description: Person ID of this Person
          format: int32
          example: 291856
        reason:
          type: string
          description: Reason for rotation
          nullable: true
          example: Injured
        reasonCode:
          type: string
          description: Reason code for rotation
          nullable: true
          example: INJ
      additionalProperties: false
    RotationPlayers:
      type: object
      properties:
        currentStint:
          $ref: '#/components/schemas/CurrentStint'
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        personId:
          type: integer
          description: Person ID of this Person
          format: int32
          example: 291856
      additionalProperties: false
    RotationSquad:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: '#/components/schemas/RotationPlayers'
          description: Rotations
          nullable: true
        squadCode:
          type: string
          description: Squad Code
          nullable: true
          example: COFC
        squadId:
          type: integer
          description: ID of the Squad
          format: int32
          example: 40
        squadName:
          type: string
          description: Squad name
          nullable: true
          example: Collingwood
      additionalProperties: false
    RotationTransaction:
      type: object
      properties:
        matchTrxId:
          type: integer
          description: Transaction Id of this rotation
          format: int32
          example: 3003109
        'off':
          $ref: '#/components/schemas/RotationPerson'
        'on':
          $ref: '#/components/schemas/Person'
        period:
          type: integer
          description: Period number of this rotation
          format: int32
          example: 1
        periodSecs:
          type: integer
          description: Period seconds of this rotation
          format: int32
          example: 120
        squad:
          $ref: '#/components/schemas/Squad'
      additionalProperties: false
    RotationType:
      type: object
      properties:
        id:
          type: integer
          description: The ID of this rotation type
          format: int32
          example: 2
        code:
          type: string
          description: The Code of this rotation type
          nullable: true
          example: INJ
        name:
          type: string
          description: The Name of this rotation type
          nullable: true
          example: Injured
      additionalProperties: false
      description: Rotation Type
    Score:
      type: object
      properties:
        goals:
          type: integer
          description: Number of goals the squad scored
          format: int32
          nullable: true
          example: 11
        behinds:
          type: integer
          description: Number of behinds the squad scored
          format: int32
          nullable: true
          example: 14
        points:
          type: integer
          description: Points total for the squad
          format: int32
          nullable: true
          example: 80
      additionalProperties: false
    Season:
      type: object
      properties:
        competitionCode:
          type: string
          description: The code of the Competition this Season is being played in
          nullable: true
          example: AFL2019
        competitionId:
          type: integer
          description: The ID of the Competition this Season is being played in
          format: int32
          example: 2019010674
        competitionName:
          type: string
          description: The Name of the Competition this Season is being played in
          nullable: true
          example: AFL Premiership Season 2019
        competitionType:
          type: string
          description: The Type of the Competition this Season is being played in
          nullable: true
          example: Premiership
        endDate:
          type: string
          description: >-
            The UTC date this Season is complete (all matches complete) in
            format 'yyyy-MM-dd'
          format: date
          example: '2019-09-28'
        endYear:
          type: integer
          description: The UTC year this Season completes
          format: int32
          example: 2019
        firstMatchStart:
          type: string
          description: >-
            The UTC date and time of the first match of this Season in format
            'yyyy-MM-dd'T'HH:mm:ss.fffZ'
          format: date-time
          nullable: true
          example: '2019-03-21T08:25:00.000Z'
        id:
          type: integer
          description: The ID of the Season
          format: int32
          example: 2019
        matches:
          $ref: '#/components/schemas/SeasonMatches'
        rounds:
          $ref: '#/components/schemas/SeasonRounds'
        startDate:
          type: string
          description: The UTC date this Season commences in format 'yyyy-MM-dd'
          format: date
          example: '2019-03-21'
        startYear:
          type: integer
          description: The Year this Season commences in
          format: int32
          example: 2019
      additionalProperties: false
      description: A Season within a League
    SeasonDetails:
      type: object
      properties:
        competitionCode:
          type: string
          description: The code of the Competition this Season is being played in
          nullable: true
          example: AFL2019
        competitionId:
          type: integer
          description: The ID of the Competition this Season is being played in
          format: int32
          example: 2019010674
        competitionName:
          type: string
          description: The Name of the Competition this Season is being played in
          nullable: true
          example: AFL Premiership Season 2019
        competitionType:
          type: string
          description: The Type of the Competition this Season is being played in
          nullable: true
          example: Premiership
        endDate:
          type: string
          description: >-
            The UTC date this Season is complete (all matches complete) in
            format 'yyyy-MM-dd'
          format: date
          example: '2019-09-28'
        endYear:
          type: integer
          description: The UTC year this Season completes
          format: int32
          example: 2019
        firstMatchStart:
          type: string
          description: >-
            The UTC date and time of the first match of this Season in format
            'yyyy-MM-dd'T'HH:mm:ss.fffZ'
          format: date-time
          nullable: true
          example: '2019-03-21T08:25:00.000Z'
        id:
          type: integer
          description: The ID of the Season
          format: int32
          example: 2019
        matches:
          $ref: '#/components/schemas/SeasonMatches'
        rounds:
          $ref: '#/components/schemas/SeasonRounds'
        startDate:
          type: string
          description: The UTC date this Season commences in format 'yyyy-MM-dd'
          format: date
          example: '2019-03-21'
        startYear:
          type: integer
          description: The Year this Season commences in
          format: int32
          example: 2019
        phases:
          type: array
          items:
            $ref: '#/components/schemas/SeasonPhase'
          description: List of Phases within the Season
          nullable: true
      additionalProperties: false
      description: Detailed Season within a League
    SeasonLadder:
      type: object
      properties:
        seasonId:
          type: integer
          description: The ID of the Season
          format: int32
          example: 2019
        phaseId:
          type: integer
          description: The Id of the Phase
          format: int32
          example: 11086
        roundNumber:
          type: integer
          description: The Round Number this Ladder is for
          format: int32
          example: 18
        squads:
          type: array
          items:
            $ref: '#/components/schemas/SeasonLadderSquad'
          description: List of Squads participating in the Season making up the Ladder
          nullable: true
          example: 18
      additionalProperties: false
      description: Season Ladder
    SeasonLadderSquad:
      type: object
      properties:
        code:
          type: string
          description: Code of the Squad
          nullable: true
          example: AFC
        id:
          type: integer
          description: Id of the Squad
          format: int32
          example: 10
        name:
          type: string
          description: Name of the Squad
          nullable: true
          example: Adelaide Crows
        position:
          type: integer
          description: Position on the Ladder
          format: int32
          example: 1
        conferencePosition:
          type: integer
          description: Squad standings position within their Conference
          format: int32
          nullable: true
          example: 2
        conferenceCode:
          type: string
          description: The code of the Conference
          nullable: true
          example: A
        ladderPoints:
          type: integer
          description: Total points earned to this point in the Season
          format: int32
          example: 12
        ladderPercentage:
          type: number
          description: Percentage at this point of the Season rounded to 2 decimal places
          format: double
          example: 129.25
        matches:
          $ref: '#/components/schemas/LadderMatches'
        scores:
          $ref: '#/components/schemas/LadderScores'
      additionalProperties: false
      description: The season squad detail.
    SeasonMatches:
      type: object
      properties:
        complete:
          type: integer
          description: The number of completed matches for this Season
          format: int32
          example: 161
        incomplete:
          type: integer
          description: The number of matches that have not been completed for this season
          format: int32
          example: 1
      additionalProperties: false
    SeasonPhase:
      type: object
      properties:
        id:
          type: integer
          description: The Id of this Phase
          format: int32
          example: 11086
        name:
          type: string
          description: The Name of this Phase
          nullable: true
          example: Home & Away
        code:
          type: string
          description: The Code of this Phase
          nullable: true
          example: HA
      additionalProperties: false
      description: A Phase of a Season
    SeasonPosition:
      type: object
      properties:
        id:
          type: integer
          description: Id of the position played.
          format: int32
          example: 16
        code:
          type: string
          description: The code of the position played.
          nullable: true
          example: FP
        name:
          type: string
          description: The name of the position played.
          nullable: true
          example: Forward Pocket
        description:
          type: string
          description: The description of the position.
          nullable: true
          example: Left Forward Pocket
      additionalProperties: false
      description: >-
        Class SeasonPosition represents the position a player takes for the
        season.
    SeasonRound:
      type: object
      properties:
        end:
          type: string
          description: >-
            The UTC date and time of the last match of this Round in format
            'yyyy-MM-dd'T'HH:mm:ss.fffZ'
          format: date-time
          nullable: true
          example: '2019-03-21T08:25:00.000Z'
        id:
          type: integer
          description: The Id of this Round
          format: int32
          example: 21727
        phaseId:
          type: integer
          description: The Phase Id of this Round
          format: int32
          example: 11086
        number:
          type: integer
          description: >-
            Number order of the Round for the Season. Number spans across Phases
            in the Season
          format: int32
          nullable: true
          example: 1
        phaseNumber:
          type: integer
          description: >-
            Number order of the Round for the Phase. Number spans across Phases
            in the Season
          format: int32
          example: 1
        start:
          type: string
          description: >-
            The UTC date and time of the first match of this Round in format
            'yyyy-MM-dd'T'HH:mm:ss.fffZ'
          format: date-time
          nullable: true
          example: '2019-03-21T08:25:00.000Z'
      additionalProperties: false
    SeasonRounds:
      type: object
      properties:
        lastCompleted:
          $ref: '#/components/schemas/SeasonRound'
        nextScheduled:
          $ref: '#/components/schemas/SeasonRound'
      additionalProperties: false
      description: A Round within a Season
    SeasonSquadDetail:
      type: object
      properties:
        code:
          type: string
          description: Code of the Squad
          nullable: true
          example: AFC
        id:
          type: integer
          description: Id of the Squad
          format: int32
          example: 10
        name:
          type: string
          description: Name of the Squad
          nullable: true
          example: Adelaide Crows
        homeState:
          $ref: '#/components/schemas/State'
        seasonId:
          type: integer
          description: Gets the season id.
          format: int32
          nullable: true
          example: 2020
      additionalProperties: false
      description: The season squad detail.
    SeasonSquadPersons:
      type: object
      properties:
        code:
          type: string
          description: Code of the Squad
          nullable: true
          example: AFC
        id:
          type: integer
          description: Id of the Squad
          format: int32
          example: 10
        name:
          type: string
          description: Name of the Squad
          nullable: true
          example: Adelaide Crows
        seasonId:
          type: integer
          description: Gets the season id.
          format: int32
          nullable: true
          example: 2020
        players:
          type: array
          items:
            $ref: '#/components/schemas/SquadPlayer'
          description: List of Players for the Squad for the Season
          nullable: true
      additionalProperties: false
      description: Contains Persons for a Squad in a given Season
    SeasonSquads:
      type: object
      properties:
        seasonId:
          type: integer
          description: Gets or sets the season id.
          format: int32
          example: 2020
        squads:
          type: array
          items:
            $ref: '#/components/schemas/Squad'
          description: Gets or sets the squads.
          nullable: true
      additionalProperties: false
      description: The season squads. Squads that are in a season
    ShotTransaction:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/ShotTransactionDetails'
        matchTrxId:
          type: integer
          description: Transaction Id of this transaction
          format: int32
          example: 2300
        period:
          type: integer
          description: Period number of this transaction
          format: int32
          example: 1
        periodSecs:
          type: integer
          description: Period seconds of this transaction
          format: int32
          example: 99
        player:
          $ref: '#/components/schemas/TransactionPerson'
        result:
          $ref: '#/components/schemas/ShotTransactionResult'
        score:
          $ref: '#/components/schemas/ShotTransactionScore'
        squad:
          $ref: '#/components/schemas/Squad'
      additionalProperties: false
      description: A Shot at goal transaction
    ShotTransactionDetails:
      type: object
      properties:
        angleGroup:
          type: string
          description: >-
            The angle of the kick from the goal line. (refer to metadata shot
            detail types for list of possible values)
          nullable: true
          example: In Front
        distanceGroup:
          type: string
          description: >-
            The distance of the kick from the goal line. (refer to metadata shot
            detail types for list of possible values)
          nullable: true
          example: 15-30m
        origin:
          type: string
          description: >-
            The origin type that resulted in the kick at goal. (refer to
            metadata shot detail types for list of possible values)
          nullable: true
          example: Mark
        type:
          type: string
          description: >-
            The type of kick at goal. (refer to metadata shot detail types for
            list of possible values)
          nullable: true
          example: Set Shot Regular
        location:
          $ref: '#/components/schemas/TransactionLocation'
        locationRotated:
          $ref: '#/components/schemas/TransactionLocation'
      additionalProperties: false
      description: Details for a shot at goal
    ShotTransactionResult:
      type: object
      properties:
        name:
          type: string
          description: Name of this result
          nullable: true
          example: Goal
        code:
          type: string
          description: Code of this result
          nullable: true
          example: G
        points:
          type: integer
          description: The points value
          format: int32
          example: 3.3923287
        pointsExpected:
          type: number
          description: >-
            The scoreboard points that would have been added if shots at goal
            were converted at competition average, representing the quality of
            shots attempted
          format: double
          nullable: true
          example: 0.4958904
        accuracyExpected:
          type: number
          description: >-
            The accuracy of shots at goal if they were converted at competition
            average, representing the quality of shots attempted
          format: double
          nullable: true
          example: 6
      additionalProperties: false
      description: Result of the shot at goal
    ShotTransactionScore:
      type: object
      properties:
        homePoints:
          type: integer
          description: Points for the home squad
          format: int32
          example: 0
        awayPoints:
          type: integer
          description: Points for the away squad
          format: int32
          example: 6
      additionalProperties: false
      description: The score for both squads.
    Squad:
      type: object
      properties:
        code:
          type: string
          description: Code of the Squad
          nullable: true
          example: AFC
        id:
          type: integer
          description: Id of the Squad
          format: int32
          example: 10
        name:
          type: string
          description: Name of the Squad
          nullable: true
          example: Adelaide Crows
      additionalProperties: false
    SquadPlayer:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        personId:
          type: integer
          description: Person ID of this Person
          format: int32
          example: 291856
        dateOfBirth:
          type: string
          description: Person date of birth in format 'yyyy-MM-dd'
          format: date
          nullable: true
          example: '1995-03-21'
        ageToday:
          type: number
          description: Age of the Person now
          format: double
          nullable: true
          example: 34.25
        ageSeason:
          type: number
          description: Age of the Person as of the first game of the Season
          format: double
          nullable: true
          example: 34.15
        ageYear:
          type: integer
          description: >-
            Age of the Person as of the first game of the Season as a whole
            number
          format: int32
          nullable: true
          example: 34
        height:
          type: number
          description: Height, in cm, of the Person
          format: double
          nullable: true
          example: 189
        weight:
          type: number
          description: Weight, in kg, of the Person
          format: double
          nullable: true
          example: 92
        position:
          $ref: '#/components/schemas/SeasonPosition'
        firstname:
          type: string
          description: First name of this Person
          nullable: true
          example: Tom
        surname:
          type: string
          description: Surname of this Person
          nullable: true
          example: Mitchell
        jumperNumber:
          type: integer
          description: Jumper Number of this Person
          format: int32
          nullable: true
          example: 6
        matches:
          $ref: '#/components/schemas/SquadPlayerMatches'
      additionalProperties: false
      description: A Person belonging to a Squad for a given Season
    SquadPlayerMatches:
      type: object
      properties:
        season:
          type: integer
          description: The number of matches played for this season
          format: int32
      additionalProperties: false
      description: Matches played information for a player in a squad
    SquadScore:
      type: object
      properties:
        goals:
          type: integer
          description: Number of goals the squad scored
          format: int32
          nullable: true
          example: 11
        behinds:
          type: integer
          description: Number of behinds the squad scored
          format: int32
          nullable: true
          example: 14
        points:
          type: integer
          description: Points total for the squad
          format: int32
          nullable: true
          example: 80
        result:
          type: string
          description: >-
            Whether the squad 'Win', 'Loss' or had a 'Draw' for the match. Only
            available post match.
          nullable: true
          example: Draw
      additionalProperties: false
    State:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets the id.
          format: int32
          nullable: true
          example: 4
        name:
          type: string
          description: Gets or sets the name.
          nullable: true
          example: South Australia
        code:
          type: string
          description: Gets or sets the code.
          nullable: true
          example: SA
      additionalProperties: false
      description: The state.
    StoppageAttendanceTrx:
      type: object
      properties:
        id:
          type: integer
          description: The trx of the Ruck Contest
          format: int32
          example: 110
        name:
          type: string
          description: The name of the transaction
          nullable: true
          example: Centre Bounce Ruck Contest
        code:
          type: string
          description: The name of the Ruck Contest Trx
          nullable: true
          example: CBVS
        period:
          type: integer
          description: The period of the Ruck Contest Trx
          format: int32
          example: 1
        periodSeconds:
          type: integer
          description: The periodSeconds of the Ruck Contest Trx
          format: int32
          example: 0
        players:
          type: array
          items:
            $ref: '#/components/schemas/StoppagePlayer'
          nullable: true
      additionalProperties: false
    StoppageClearanceTrx:
      type: object
      properties:
        id:
          type: integer
          description: The match trx id of the Clearance Trx
          format: int32
          example: 510
        name:
          type: string
          description: The name of the transaction
          nullable: true
          example: Centre Bounce Clearance
        code:
          type: string
          description: The name of the Clearance Trx
          nullable: true
          example: CBCL
        period:
          type: integer
          description: The period of the Clearance Trx
          format: int32
          example: 1
        periodSeconds:
          type: integer
          description: The periodSeconds of the Clearance Trx
          format: int32
          example: 17
        zone:
          type: string
          description: The logical zone of the Clearance Trx
          nullable: true
          example: M
        player:
          $ref: '#/components/schemas/StoppagePlayer'
      additionalProperties: false
    StoppageExitTrx:
      type: object
      properties:
        id:
          type: integer
          description: The match trx id of the Stoppage Exit Trx
          format: int32
          example: 500
        name:
          type: string
          description: The name of the transaction
          nullable: true
          example: Kick Effective Long
        code:
          type: string
          description: The name of the Stoppage Exit Trx
          nullable: true
          example: KKLO
        period:
          type: integer
          description: The period of the Stoppage Exit Trx
          format: int32
          example: 1
        periodSeconds:
          type: integer
          description: The periodSeconds of the Stoppage Exit Trx
          format: int32
          example: 17
        zone:
          type: string
          description: The Zone of the Ruck Stoppage Exit Trx
          nullable: true
          example: AM
        type:
          type: string
          description: The type of the Stoppage Exit
          nullable: true
          example: Kick
        pressure:
          type: string
          description: The Pressure on the Stoppage Exit Trx
          nullable: true
          example: SET
        player:
          $ref: '#/components/schemas/StoppagePlayer'
        kicking:
          $ref: '#/components/schemas/StoppageKicking'
        location:
          $ref: '#/components/schemas/StoppageGraphicalDetails'
      additionalProperties: false
    StoppageFirstPossessionTrx:
      type: object
      properties:
        id:
          type: integer
          description: The match trx id of the First possession Trx
          format: int32
          example: 410
        name:
          type: string
          description: The name of the transaction
          nullable: true
          example: Centre Bounce First Possession
        code:
          type: string
          description: The name of the First possession Trx
          nullable: true
          example: CBFP
        period:
          type: integer
          description: The period of the First possession Trx
          format: int32
          example: 1
        periodSeconds:
          type: integer
          description: The periodSeconds of the First possession Trx
          format: int32
          example: 12
        zone:
          type: string
          description: The logical zone of the First possession Trx
          nullable: true
          example: M
        player:
          $ref: '#/components/schemas/StoppagePlayer'
      additionalProperties: false
    StoppageGraphicalDetails:
      type: object
      properties:
        x:
          type: number
          description: The X location of the event. The centre of the ground is 0
          format: double
          nullable: true
          example: -23.8
        xStd:
          type: number
          description: >-
            The X location of the event. Standardised to the Melbourne Cricket
            Ground (160m x 141m).
          format: double
          nullable: true
          example: -23.7
        'y':
          type: number
          description: The Y location of the event. The centre of the ground is 0
          format: double
          nullable: true
          example: -50.3
        yStd:
          type: number
          description: >-
            The Y location of the event. Standardised to the Melbourne Cricket
            Ground (160m x 141m)
          format: double
          nullable: true
          example: -52.9
      additionalProperties: false
    StoppageHitoutTrx:
      type: object
      properties:
        id:
          type: integer
          description: The match trx id of the Hitout Trx
          format: int32
          example: 210
        name:
          type: string
          description: The name of the transaction
          nullable: true
          example: Centre Bounce Hitout
        code:
          type: string
          description: The name of the Hitout Trx
          nullable: true
          example: CBHO
        period:
          type: integer
          description: The period of the Hitout Trx
          format: int32
          example: 1
        periodSeconds:
          type: integer
          description: The periodSeconds of the Hitout Trx
          format: int32
          example: 4
        player:
          $ref: '#/components/schemas/StoppagePlayer'
      additionalProperties: false
    StoppageKicking:
      type: object
      properties:
        foot:
          type: string
          description: Description of kicking foot
          nullable: true
          example: Left
        intent:
          type: string
          description: Description of kicking intent
          nullable: true
          example: Lead
        distance:
          type: string
          description: Description of kicking distance
          nullable: true
          example: Chip
        direction:
          type: string
          description: Description of kicking direction
          nullable: true
          example: Forward
      additionalProperties: false
    StoppagePlayer:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        personId:
          type: integer
          description: Person ID of this Person
          format: int32
          nullable: true
          example: 291856
        squadId:
          type: integer
          description: The squad id of the player
          format: int32
          nullable: true
          example: 100
      additionalProperties: false
    TransactionDetails:
      type: object
      properties:
        freeKickReason:
          type: string
          description: The reason for a free kick in a free kick event
          nullable: true
          example: Push in Back
        freeKickContext:
          type: string
          description: The context of a Free Kick event
          nullable: true
          example: Marking
        inside50Direction:
          type: string
          description: The direction of an Inside 50 event
          nullable: true
          example: Left
        inside50Intent:
          type: string
          description: The intent of an inside 50 event
          nullable: true
          example: Go To
        shotSource:
          type: string
          description: Source of a shot at goal  event
          nullable: true
          example: Mark
        shotType:
          type: string
          description: Type of shot for a shot at goal event
          nullable: true
          example: General Play Regular
        shotAngle:
          type: string
          description: The angle for a shot at goal event
          nullable: true
          example: Left Corridor
        shotDistance:
          type: string
          description: Distance from goal for a shot at goal event
          nullable: true
          example: 50m+
        shotResult:
          type: string
          description: Shot result for a shot at goal event
          nullable: true
          example: Behind Left
        kickinDirection:
          type: string
          description: Direction of the kick for a kick in event
          nullable: true
          example: Centre
      additionalProperties: false
    TransactionLocation:
      type: object
      properties:
        x:
          type: number
          description: The X location of the kick. The centre of the ground is 0
          format: double
          nullable: true
          example: 50.8
        xStd:
          type: number
          description: >-
            The X location of the kick. Standardised to the Melbourne Cricket
            Ground (160m x 141m).
          format: double
          nullable: true
          example: 50.5
        'y':
          type: number
          description: The Y location of the kick. The centre of the ground is 0
          format: double
          nullable: true
          example: -0.7
        yStd:
          type: number
          description: >-
            The Y location of the kick. Standardised to the Melbourne Cricket
            Ground (160m x 141m).
          format: double
          nullable: true
          example: -0.7
      additionalProperties: false
    TransactionPerson:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of this Person
          nullable: true
          example: T.Mitchell
        fullname:
          type: string
          description: Fullname of this Person
          nullable: true
          example: Tom Mitchell
        id:
          type: integer
          description: Person ID of this Person
          format: int32
          example: 291856
      additionalProperties: false
    TransactionResult:
      type: object
      properties:
        name:
          type: string
          description: Name of this result
          nullable: true
          example: Goal
        code:
          type: string
          description: Code of this result
          nullable: true
          example: G
        points:
          type: integer
          description: The points value
          format: int32
          example: 6
      additionalProperties: false
    TransactionSquad:
      type: object
      properties:
        name:
          type: string
          description: Name of the squad
          nullable: true
          example: Adelaide Crows
        code:
          type: string
          description: Squad code
          nullable: true
          example: ADEL
        id:
          type: integer
          description: Squad Id
          format: int32
          example: 10
      additionalProperties: false
    VenueDimensions:
      type: object
      properties:
        length:
          type: integer
          description: The Length in metres of the Venue.
          format: int32
          example: 160
        width:
          type: integer
          description: The Width in metres of the Venue.
          format: int32
          example: 140
      additionalProperties: false
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: >-
            https://championdata-afl.au.auth0.com/authorize?audience=https://api.afl.championdata.io/
          scopes: {}
      x-client-id: w8Db5WId6yvqPc8gTRMQH7Dp0vBhMmjc
    bearerAuth:
      type: apiKey
      description: JWT Authorization header using the Bearer scheme.
      name: Authorization
      in: header
security:
  - oauth2: []
  - bearerAuth: []
