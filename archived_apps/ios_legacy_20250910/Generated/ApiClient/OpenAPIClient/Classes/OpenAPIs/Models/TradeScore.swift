//
// TradeScore.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

// MARK: - TradeScore

public struct TradeScore: Codable, JSONEncodable, Hashable {
    public static let scoreRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 100, exclusiveMaximum: false, multipleOf: nil)
    public static let confidenceRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 100, exclusiveMaximum: false, multipleOf: nil)
    /** Overall trade score (0-100) */
    public var score: Int
    /** Confidence in the recommendation (0-100) */
    public var confidence: Int
    /** Human-readable trade recommendation */
    public var recommendation: String
    public var factors: TradeFactors

    public init(score: Int, confidence: Int, recommendation: String, factors: TradeFactors) {
        self.score = score
        self.confidence = confidence
        self.recommendation = recommendation
        self.factors = factors
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case score
        case confidence
        case recommendation
        case factors
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(score, forKey: .score)
        try container.encode(confidence, forKey: .confidence)
        try container.encode(recommendation, forKey: .recommendation)
        try container.encode(factors, forKey: .factors)
    }
}
