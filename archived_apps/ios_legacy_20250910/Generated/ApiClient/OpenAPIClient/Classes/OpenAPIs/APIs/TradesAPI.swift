//
// TradesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

// MARK: - TradesAPI

open class TradesAPI {
    /**
     Calculate trade score

     - parameter tradeScoreRequest: (body) Trade analysis parameters
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func calculateTradeScore(tradeScoreRequest: TradeScoreRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: TradeScoreResponse?, _ error: Error?) -> Void)) -> RequestTask {
        calculateTradeScoreWithRequestBuilder(tradeScoreRequest: tradeScoreRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Calculate trade score
     - POST /api/trade_score
     - Calculate a trade score and recommendation for swapping one player for another. Uses advanced algorithms considering form, price, fixtures, and ownership.
     - API Key:
       - type: apiKey X-API-Key (HEADER)
       - name: ApiKeyAuth
     - parameter tradeScoreRequest: (body) Trade analysis parameters
     - returns: RequestBuilder<TradeScoreResponse>
     */
    open class func calculateTradeScoreWithRequestBuilder(tradeScoreRequest: TradeScoreRequest) -> RequestBuilder<TradeScoreResponse> {
        let localVariablePath = "/api/trade_score"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: tradeScoreRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<TradeScoreResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
